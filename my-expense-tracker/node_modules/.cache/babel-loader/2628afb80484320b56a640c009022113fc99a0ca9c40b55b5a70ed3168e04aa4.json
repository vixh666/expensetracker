{"ast":null,"code":"// import React, { useState, useEffect } from 'react';\n// import jsPDF from 'jspdf';\n// import 'jspdf-autotable';\n// import PieChart from './PieChart';\n// import Footer from './Footer'; // Import the Footer component\n// import './Home.css';\n// const Home = () => {\n//   const [income, setIncome] = useState('');\n//   const [expenses, setExpenses] = useState([]);\n//   const [expenseDate, setExpenseDate] = useState('');\n//   const [expenseTime, setExpenseTime] = useState('');\n//   const [expenseAmount, setExpenseAmount] = useState('');\n//   const [expenseMode, setExpenseMode] = useState('');\n//   const [expenseType, setExpenseType] = useState('');\n//   const [currentTime, setCurrentTime] = useState('');\n//   useEffect(() => {\n//     const updateCurrentTime = () => {\n//       const now = new Date();\n//       setCurrentTime(now.toLocaleTimeString());\n//     };\n//     const timer = setInterval(updateCurrentTime, 1000);\n//     updateCurrentTime();\n//     return () => clearInterval(timer);\n//   }, []);\n//   const handleAddIncome = () => {\n//     setIncome(parseInt(income) || 0);\n//   };\n//   const handleAddExpense = () => {\n//     if (expenseDate && expenseTime && expenseAmount && expenseMode && expenseType) {\n//       setExpenses([...expenses, { date: expenseDate, time: expenseTime, amount: parseInt(expenseAmount), mode: expenseMode, type: expenseType }]);\n//       setExpenseDate('');\n//       setExpenseTime('');\n//       setExpenseAmount('');\n//       setExpenseMode('');\n//       setExpenseType('');\n//     }\n//   };\n//   const handleDeleteExpense = (index) => {\n//     const newExpenses = expenses.filter((_, i) => i !== index);\n//     setExpenses(newExpenses);\n//   };\n//   const totalExpenses = expenses.reduce((acc, expense) => acc + expense.amount, 0);\n//   const balance = income - totalExpenses;\n//   const exportPDF = () => {\n//     const doc = new jsPDF();\n//     doc.setFontSize(12);\n//     doc.text('Expense Report', 14, 16);\n//     doc.autoTable({\n//       startY: 25,\n//       head: [['Date', 'Time', 'Amount', 'Mode', 'Type']],\n//       body: expenses.map(expense => [expense.date, expense.time, expense.amount, expense.mode, expense.type]),\n//       didDrawPage: (data) => {\n//         doc.text(`Total Expenses: ${totalExpenses}`, 14, data.cursor.y + 10);\n//         doc.text(`Balance: ${balance}`, 14, data.cursor.y + 20);\n//       }\n//     });\n//     doc.save('expense-report.pdf');\n//   };\n//   return (\n//     <div className=\"home-container\">\n//       <div className=\"home-content\">\n//         {/* Input forms and buttons */}\n//         <div className=\"input-box\">\n//           <div className=\"form-group\">\n//             <label htmlFor=\"income\">Income:</label>\n//             <input\n//               type=\"number\"\n//               id=\"income\"\n//               value={income}\n//               onChange={(e) => setIncome(e.target.value)}\n//               className=\"input-field\"\n//               placeholder=\"Enter Your Income\"\n//             />\n//             <button onClick={handleAddIncome} className=\"button\">Add Income</button>\n//           </div>\n//           <div className=\"form-group\">\n//             <label htmlFor=\"expenseDate\">Date:</label>\n//             <input\n//               type=\"date\"\n//               id=\"expenseDate\"\n//               value={expenseDate}\n//               onChange={(e) => setExpenseDate(e.target.value)}\n//               className=\"input-field\"\n//             />\n//           </div>\n//           <div className=\"form-group\">\n//             <label htmlFor=\"expenseTime\">Time:</label>\n//             <input\n//               type=\"time\"\n//               id=\"expenseTime\"\n//               value={expenseTime}\n//               onChange={(e) => setExpenseTime(e.target.value)}\n//               className=\"input-field\"\n//             />\n//             <div id=\"currentTime\" className=\"time-container\">\n//               Current Time: {currentTime}\n//             </div>\n//           </div>\n//           <div className=\"form-group\">\n//             <label htmlFor=\"expenseAmount\">Amount:</label>\n//             <input\n//               type=\"number\"\n//               id=\"expenseAmount\"\n//               value={expenseAmount}\n//               onChange={(e) => setExpenseAmount(e.target.value)}\n//               className=\"input-field\"\n//               placeholder=\"Enter Amount\"\n//             />\n//           </div>\n//           <div className=\"form-group\">\n//             <label htmlFor=\"expenseMode\">Payment Method:</label>\n//             <select\n//               id=\"expenseMode\"\n//               value={expenseMode}\n//               onChange={(e) => setExpenseMode(e.target.value)}\n//               className=\"input-field\"\n//             >\n//               <option value=\"\">Select Mode</option>\n//               <option value=\"Cash\">Cash</option>\n//               <option value=\"CreditCard\">Credit Card</option>\n//               <option value=\"DebitCard\">Debit Card</option>\n//               <option value=\"BankTransfer\">Bank Transfer</option>\n//               <option value=\"UPI\">UPI</option>\n//             </select>\n//           </div>\n//           <div className=\"form-group\">\n//             <label htmlFor=\"expenseType\">Type:</label>\n//             <input\n//               type=\"text\"\n//               id=\"expenseType\"\n//               value={expenseType}\n//               onChange={(e) => setExpenseType(e.target.value)}\n//               className=\"input-field\"\n//               placeholder=\"Enter Type of Expense\"\n//             />\n//           </div>\n//           <button onClick={handleAddExpense} className=\"button\">Add Expense</button>\n//         </div>\n//         <div className=\"table-container\">\n//           <table>\n//             <thead>\n//               <tr>\n//                 <th>Your Income</th>\n//                 <th>{income}</th>\n//                 <th></th>\n//               </tr>\n//               <tr>\n//                 <th>Date</th>\n//                 <th>Time</th>\n//                 <th>Amount</th>\n//                 <th>Mode</th>\n//                 <th>Type</th>\n//                 <th>Action</th>\n//               </tr>\n//             </thead>\n//             <tbody>\n//               {expenses.map((expense, index) => (\n//                 <tr key={index}>\n//                   <td>{expense.date}</td>\n//                   <td>{expense.time}</td>\n//                   <td>{expense.amount}</td>\n//                   <td>{expense.mode}</td>\n//                   <td>{expense.type}</td>\n//                   <td>\n//                     <button className=\"delete-btn\" onClick={() => handleDeleteExpense(index)}>Delete</button>\n//                   </td>\n//                 </tr>\n//               ))}\n//               <tr>\n//                 <td>Total Expenses:</td>\n//                 <td>{totalExpenses}</td>\n//                 <td></td>\n//                 <td></td>\n//                 <td></td>\n//               </tr>\n//               <tr>\n//                 <td>Balance:</td>\n//                 <td>{balance}</td>\n//                 <td></td>\n//                 <td></td>\n//                 <td></td>\n//               </tr>\n//             </tbody>\n//           </table>\n//         </div>\n//         <button onClick={exportPDF} className=\"button\">Export to PDF</button>\n//         <PieChart data={expenses} /> {/* Include the PieChart component */}\n//       </div>\n//       <br></br>\n//       <Footer /> {/* Include the Footer component */}\n//     </div>\n//   );\n// };\n// export default Home;\nimport React,{useState}from'react';import jsPDF from'jspdf';import'jspdf-autotable';import PieChart from'./PieChart';import Footer from'./Footer';// Import the Footer component\nimport'./Home.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Home=()=>{const[income,setIncome]=useState('');const[expenses,setExpenses]=useState([]);const[expenseDate,setExpenseDate]=useState('');const[expenseTime,setExpenseTime]=useState('');const[expenseAmount,setExpenseAmount]=useState('');const[expenseMode,setExpenseMode]=useState('');const[expenseType,setExpenseType]=useState('');const handleAddIncome=()=>{setIncome(parseInt(income)||0);};const handleAddExpense=()=>{if(expenseDate&&expenseTime&&expenseAmount&&expenseMode&&expenseType){setExpenses([...expenses,{date:expenseDate,time:expenseTime,amount:parseInt(expenseAmount),mode:expenseMode,type:expenseType}]);setExpenseDate('');setExpenseTime('');setExpenseAmount('');setExpenseMode('');setExpenseType('');}};const handleDeleteExpense=index=>{const newExpenses=expenses.filter((_,i)=>i!==index);setExpenses(newExpenses);};const totalExpenses=expenses.reduce((acc,expense)=>acc+expense.amount,0);const balance=income-totalExpenses;const exportPDF=()=>{const doc=new jsPDF();doc.setFontSize(12);doc.text('Expense Report',14,16);doc.autoTable({startY:25,head:[['Date','Time','Amount','Mode','Type']],body:expenses.map(expense=>[expense.date,expense.time,expense.amount,expense.mode,expense.type]),didDrawPage:data=>{doc.text(\"Total Expenses: \".concat(totalExpenses),14,data.cursor.y+10);doc.text(\"Balance: \".concat(balance),14,data.cursor.y+20);}});doc.save('expense-report.pdf');};return/*#__PURE__*/_jsxs(\"div\",{className:\"home-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"home-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"input-box\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"income\",children:\"Income:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",id:\"income\",value:income,onChange:e=>setIncome(e.target.value),className:\"input-field\",placeholder:\"Enter Your Income\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleAddIncome,className:\"button\",children:\"Add Income\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"expenseDate\",children:\"Date:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"date\",id:\"expenseDate\",value:expenseDate,onChange:e=>setExpenseDate(e.target.value),className:\"input-field\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"expenseTime\",children:\"Time:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"time\",id:\"expenseTime\",value:expenseTime,onChange:e=>setExpenseTime(e.target.value),className:\"input-field\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"expenseAmount\",children:\"Amount:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",id:\"expenseAmount\",value:expenseAmount,onChange:e=>setExpenseAmount(e.target.value),className:\"input-field\",placeholder:\"Enter Amount\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"expenseMode\",children:\"Payment Method:\"}),/*#__PURE__*/_jsxs(\"select\",{id:\"expenseMode\",value:expenseMode,onChange:e=>setExpenseMode(e.target.value),className:\"input-field\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select Mode\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Cash\",children:\"Cash\"}),/*#__PURE__*/_jsx(\"option\",{value:\"CreditCard\",children:\"Credit Card\"}),/*#__PURE__*/_jsx(\"option\",{value:\"DebitCard\",children:\"Debit Card\"}),/*#__PURE__*/_jsx(\"option\",{value:\"BankTransfer\",children:\"Bank Transfer\"}),/*#__PURE__*/_jsx(\"option\",{value:\"UPI\",children:\"UPI\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"expenseType\",children:\"Type:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"expenseType\",value:expenseType,onChange:e=>setExpenseType(e.target.value),className:\"input-field\",placeholder:\"Enter Type of Expense\"})]}),/*#__PURE__*/_jsx(\"button\",{onClick:handleAddExpense,className:\"button\",children:\"Add Expense\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"table-container\",children:/*#__PURE__*/_jsxs(\"table\",{children:[/*#__PURE__*/_jsxs(\"thead\",{children:[/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Your Income\"}),/*#__PURE__*/_jsx(\"th\",{children:income}),/*#__PURE__*/_jsx(\"th\",{})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Date\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Time\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Amount\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Mode\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Type\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Action\"})]})]}),/*#__PURE__*/_jsxs(\"tbody\",{children:[expenses.map((expense,index)=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:expense.date}),/*#__PURE__*/_jsx(\"td\",{children:expense.time}),/*#__PURE__*/_jsx(\"td\",{children:expense.amount}),/*#__PURE__*/_jsx(\"td\",{children:expense.mode}),/*#__PURE__*/_jsx(\"td\",{children:expense.type}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"button\",{className:\"delete-btn\",onClick:()=>handleDeleteExpense(index),children:\"Delete\"})})]},index)),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:\"Total Expenses:\"}),/*#__PURE__*/_jsx(\"td\",{children:totalExpenses}),/*#__PURE__*/_jsx(\"td\",{}),/*#__PURE__*/_jsx(\"td\",{}),/*#__PURE__*/_jsx(\"td\",{})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:\"Balance:\"}),/*#__PURE__*/_jsx(\"td\",{children:balance}),/*#__PURE__*/_jsx(\"td\",{}),/*#__PURE__*/_jsx(\"td\",{}),/*#__PURE__*/_jsx(\"td\",{})]})]})]})}),/*#__PURE__*/_jsx(\"button\",{onClick:exportPDF,className:\"button\",children:\"Export to PDF\"}),/*#__PURE__*/_jsx(PieChart,{data:expenses}),\" \"]}),/*#__PURE__*/_jsx(Footer,{}),\" \"]});};export default Home;","map":{"version":3,"names":["React","useState","jsPDF","PieChart","Footer","jsx","_jsx","jsxs","_jsxs","Home","income","setIncome","expenses","setExpenses","expenseDate","setExpenseDate","expenseTime","setExpenseTime","expenseAmount","setExpenseAmount","expenseMode","setExpenseMode","expenseType","setExpenseType","handleAddIncome","parseInt","handleAddExpense","date","time","amount","mode","type","handleDeleteExpense","index","newExpenses","filter","_","i","totalExpenses","reduce","acc","expense","balance","exportPDF","doc","setFontSize","text","autoTable","startY","head","body","map","didDrawPage","data","concat","cursor","y","save","className","children","htmlFor","id","value","onChange","e","target","placeholder","onClick"],"sources":["D:/desktop/tracker/my-expense-tracker/src/components/Home.js"],"sourcesContent":["\r\n// import React, { useState, useEffect } from 'react';\r\n// import jsPDF from 'jspdf';\r\n// import 'jspdf-autotable';\r\n// import PieChart from './PieChart';\r\n// import Footer from './Footer'; // Import the Footer component\r\n// import './Home.css';\r\n\r\n// const Home = () => {\r\n//   const [income, setIncome] = useState('');\r\n//   const [expenses, setExpenses] = useState([]);\r\n//   const [expenseDate, setExpenseDate] = useState('');\r\n//   const [expenseTime, setExpenseTime] = useState('');\r\n//   const [expenseAmount, setExpenseAmount] = useState('');\r\n//   const [expenseMode, setExpenseMode] = useState('');\r\n//   const [expenseType, setExpenseType] = useState('');\r\n//   const [currentTime, setCurrentTime] = useState('');\r\n\r\n//   useEffect(() => {\r\n//     const updateCurrentTime = () => {\r\n//       const now = new Date();\r\n//       setCurrentTime(now.toLocaleTimeString());\r\n//     };\r\n\r\n//     const timer = setInterval(updateCurrentTime, 1000);\r\n//     updateCurrentTime();\r\n//     return () => clearInterval(timer);\r\n//   }, []);\r\n\r\n//   const handleAddIncome = () => {\r\n//     setIncome(parseInt(income) || 0);\r\n//   };\r\n\r\n//   const handleAddExpense = () => {\r\n//     if (expenseDate && expenseTime && expenseAmount && expenseMode && expenseType) {\r\n//       setExpenses([...expenses, { date: expenseDate, time: expenseTime, amount: parseInt(expenseAmount), mode: expenseMode, type: expenseType }]);\r\n//       setExpenseDate('');\r\n//       setExpenseTime('');\r\n//       setExpenseAmount('');\r\n//       setExpenseMode('');\r\n//       setExpenseType('');\r\n//     }\r\n//   };\r\n\r\n//   const handleDeleteExpense = (index) => {\r\n//     const newExpenses = expenses.filter((_, i) => i !== index);\r\n//     setExpenses(newExpenses);\r\n//   };\r\n\r\n//   const totalExpenses = expenses.reduce((acc, expense) => acc + expense.amount, 0);\r\n//   const balance = income - totalExpenses;\r\n\r\n//   const exportPDF = () => {\r\n//     const doc = new jsPDF();\r\n//     doc.setFontSize(12);\r\n//     doc.text('Expense Report', 14, 16);\r\n\r\n//     doc.autoTable({\r\n//       startY: 25,\r\n//       head: [['Date', 'Time', 'Amount', 'Mode', 'Type']],\r\n//       body: expenses.map(expense => [expense.date, expense.time, expense.amount, expense.mode, expense.type]),\r\n//       didDrawPage: (data) => {\r\n//         doc.text(`Total Expenses: ${totalExpenses}`, 14, data.cursor.y + 10);\r\n//         doc.text(`Balance: ${balance}`, 14, data.cursor.y + 20);\r\n//       }\r\n//     });\r\n\r\n//     doc.save('expense-report.pdf');\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"home-container\">\r\n//       <div className=\"home-content\">\r\n//         {/* Input forms and buttons */}\r\n//         <div className=\"input-box\">\r\n//           <div className=\"form-group\">\r\n//             <label htmlFor=\"income\">Income:</label>\r\n//             <input\r\n//               type=\"number\"\r\n//               id=\"income\"\r\n//               value={income}\r\n//               onChange={(e) => setIncome(e.target.value)}\r\n//               className=\"input-field\"\r\n//               placeholder=\"Enter Your Income\"\r\n//             />\r\n//             <button onClick={handleAddIncome} className=\"button\">Add Income</button>\r\n//           </div>\r\n//           <div className=\"form-group\">\r\n//             <label htmlFor=\"expenseDate\">Date:</label>\r\n//             <input\r\n//               type=\"date\"\r\n//               id=\"expenseDate\"\r\n//               value={expenseDate}\r\n//               onChange={(e) => setExpenseDate(e.target.value)}\r\n//               className=\"input-field\"\r\n//             />\r\n//           </div>\r\n//           <div className=\"form-group\">\r\n//             <label htmlFor=\"expenseTime\">Time:</label>\r\n//             <input\r\n//               type=\"time\"\r\n//               id=\"expenseTime\"\r\n//               value={expenseTime}\r\n//               onChange={(e) => setExpenseTime(e.target.value)}\r\n//               className=\"input-field\"\r\n//             />\r\n//             <div id=\"currentTime\" className=\"time-container\">\r\n//               Current Time: {currentTime}\r\n//             </div>\r\n//           </div>\r\n//           <div className=\"form-group\">\r\n//             <label htmlFor=\"expenseAmount\">Amount:</label>\r\n//             <input\r\n//               type=\"number\"\r\n//               id=\"expenseAmount\"\r\n//               value={expenseAmount}\r\n//               onChange={(e) => setExpenseAmount(e.target.value)}\r\n//               className=\"input-field\"\r\n//               placeholder=\"Enter Amount\"\r\n//             />\r\n//           </div>\r\n//           <div className=\"form-group\">\r\n//             <label htmlFor=\"expenseMode\">Payment Method:</label>\r\n//             <select\r\n//               id=\"expenseMode\"\r\n//               value={expenseMode}\r\n//               onChange={(e) => setExpenseMode(e.target.value)}\r\n//               className=\"input-field\"\r\n//             >\r\n//               <option value=\"\">Select Mode</option>\r\n//               <option value=\"Cash\">Cash</option>\r\n//               <option value=\"CreditCard\">Credit Card</option>\r\n//               <option value=\"DebitCard\">Debit Card</option>\r\n//               <option value=\"BankTransfer\">Bank Transfer</option>\r\n//               <option value=\"UPI\">UPI</option>\r\n//             </select>\r\n//           </div>\r\n//           <div className=\"form-group\">\r\n//             <label htmlFor=\"expenseType\">Type:</label>\r\n//             <input\r\n//               type=\"text\"\r\n//               id=\"expenseType\"\r\n//               value={expenseType}\r\n//               onChange={(e) => setExpenseType(e.target.value)}\r\n//               className=\"input-field\"\r\n//               placeholder=\"Enter Type of Expense\"\r\n//             />\r\n//           </div>\r\n//           <button onClick={handleAddExpense} className=\"button\">Add Expense</button>\r\n//         </div>\r\n\r\n//         <div className=\"table-container\">\r\n//           <table>\r\n//             <thead>\r\n//               <tr>\r\n//                 <th>Your Income</th>\r\n//                 <th>{income}</th>\r\n//                 <th></th>\r\n//               </tr>\r\n//               <tr>\r\n//                 <th>Date</th>\r\n//                 <th>Time</th>\r\n//                 <th>Amount</th>\r\n//                 <th>Mode</th>\r\n//                 <th>Type</th>\r\n//                 <th>Action</th>\r\n//               </tr>\r\n//             </thead>\r\n//             <tbody>\r\n//               {expenses.map((expense, index) => (\r\n//                 <tr key={index}>\r\n//                   <td>{expense.date}</td>\r\n//                   <td>{expense.time}</td>\r\n//                   <td>{expense.amount}</td>\r\n//                   <td>{expense.mode}</td>\r\n//                   <td>{expense.type}</td>\r\n//                   <td>\r\n//                     <button className=\"delete-btn\" onClick={() => handleDeleteExpense(index)}>Delete</button>\r\n//                   </td>\r\n//                 </tr>\r\n//               ))}\r\n//               <tr>\r\n//                 <td>Total Expenses:</td>\r\n//                 <td>{totalExpenses}</td>\r\n//                 <td></td>\r\n//                 <td></td>\r\n//                 <td></td>\r\n//               </tr>\r\n//               <tr>\r\n//                 <td>Balance:</td>\r\n//                 <td>{balance}</td>\r\n//                 <td></td>\r\n//                 <td></td>\r\n//                 <td></td>\r\n//               </tr>\r\n//             </tbody>\r\n//           </table>\r\n//         </div>\r\n//         <button onClick={exportPDF} className=\"button\">Export to PDF</button>\r\n//         <PieChart data={expenses} /> {/* Include the PieChart component */}\r\n//       </div>\r\n//       <br></br>\r\n//       <Footer /> {/* Include the Footer component */}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Home;\r\nimport React, { useState } from 'react';\r\nimport jsPDF from 'jspdf';\r\nimport 'jspdf-autotable';\r\nimport PieChart from './PieChart';\r\nimport Footer from './Footer'; // Import the Footer component\r\nimport './Home.css';\r\n\r\nconst Home = () => {\r\n  const [income, setIncome] = useState('');\r\n  const [expenses, setExpenses] = useState([]);\r\n  const [expenseDate, setExpenseDate] = useState('');\r\n  const [expenseTime, setExpenseTime] = useState('');\r\n  const [expenseAmount, setExpenseAmount] = useState('');\r\n  const [expenseMode, setExpenseMode] = useState('');\r\n  const [expenseType, setExpenseType] = useState('');\r\n\r\n  const handleAddIncome = () => {\r\n    setIncome(parseInt(income) || 0);\r\n  };\r\n\r\n  const handleAddExpense = () => {\r\n    if (expenseDate && expenseTime && expenseAmount && expenseMode && expenseType) {\r\n      setExpenses([...expenses, { date: expenseDate, time: expenseTime, amount: parseInt(expenseAmount), mode: expenseMode, type: expenseType }]);\r\n      setExpenseDate('');\r\n      setExpenseTime('');\r\n      setExpenseAmount('');\r\n      setExpenseMode('');\r\n      setExpenseType('');\r\n    }\r\n  };\r\n\r\n  const handleDeleteExpense = (index) => {\r\n    const newExpenses = expenses.filter((_, i) => i !== index);\r\n    setExpenses(newExpenses);\r\n  };\r\n\r\n  const totalExpenses = expenses.reduce((acc, expense) => acc + expense.amount, 0);\r\n  const balance = income - totalExpenses;\r\n\r\n  const exportPDF = () => {\r\n    const doc = new jsPDF();\r\n    doc.setFontSize(12);\r\n    doc.text('Expense Report', 14, 16);\r\n\r\n    doc.autoTable({\r\n      startY: 25,\r\n      head: [['Date', 'Time', 'Amount', 'Mode', 'Type']],\r\n      body: expenses.map(expense => [expense.date, expense.time, expense.amount, expense.mode, expense.type]),\r\n      didDrawPage: (data) => {\r\n        doc.text(`Total Expenses: ${totalExpenses}`, 14, data.cursor.y + 10);\r\n        doc.text(`Balance: ${balance}`, 14, data.cursor.y + 20);\r\n      }\r\n    });\r\n\r\n    doc.save('expense-report.pdf');\r\n  };\r\n\r\n  return (\r\n    <div className=\"home-container\">\r\n      <div className=\"home-content\">\r\n        {/* Input forms and buttons */}\r\n        <div className=\"input-box\">\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"income\">Income:</label>\r\n            <input\r\n              type=\"number\"\r\n              id=\"income\"\r\n              value={income}\r\n              onChange={(e) => setIncome(e.target.value)}\r\n              className=\"input-field\"\r\n              placeholder=\"Enter Your Income\"\r\n            />\r\n            <button onClick={handleAddIncome} className=\"button\">Add Income</button>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"expenseDate\">Date:</label>\r\n            <input\r\n              type=\"date\"\r\n              id=\"expenseDate\"\r\n              value={expenseDate}\r\n              onChange={(e) => setExpenseDate(e.target.value)}\r\n              className=\"input-field\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"expenseTime\">Time:</label>\r\n            <input\r\n              type=\"time\"\r\n              id=\"expenseTime\"\r\n              value={expenseTime}\r\n              onChange={(e) => setExpenseTime(e.target.value)}\r\n              className=\"input-field\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"expenseAmount\">Amount:</label>\r\n            <input\r\n              type=\"number\"\r\n              id=\"expenseAmount\"\r\n              value={expenseAmount}\r\n              onChange={(e) => setExpenseAmount(e.target.value)}\r\n              className=\"input-field\"\r\n              placeholder=\"Enter Amount\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"expenseMode\">Payment Method:</label>\r\n            <select\r\n              id=\"expenseMode\"\r\n              value={expenseMode}\r\n              onChange={(e) => setExpenseMode(e.target.value)}\r\n              className=\"input-field\"\r\n            >\r\n              <option value=\"\">Select Mode</option>\r\n              <option value=\"Cash\">Cash</option>\r\n              <option value=\"CreditCard\">Credit Card</option>\r\n              <option value=\"DebitCard\">Debit Card</option>\r\n              <option value=\"BankTransfer\">Bank Transfer</option>\r\n              <option value=\"UPI\">UPI</option>\r\n            </select>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"expenseType\">Type:</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"expenseType\"\r\n              value={expenseType}\r\n              onChange={(e) => setExpenseType(e.target.value)}\r\n              className=\"input-field\"\r\n              placeholder=\"Enter Type of Expense\"\r\n            />\r\n          </div>\r\n          <button onClick={handleAddExpense} className=\"button\">Add Expense</button>\r\n        </div>\r\n\r\n        <div className=\"table-container\">\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>Your Income</th>\r\n                <th>{income}</th>\r\n                <th></th>\r\n              </tr>\r\n              <tr>\r\n                <th>Date</th>\r\n                <th>Time</th>\r\n                <th>Amount</th>\r\n                <th>Mode</th>\r\n                <th>Type</th>\r\n                <th>Action</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {expenses.map((expense, index) => (\r\n                <tr key={index}>\r\n                  <td>{expense.date}</td>\r\n                  <td>{expense.time}</td>\r\n                  <td>{expense.amount}</td>\r\n                  <td>{expense.mode}</td>\r\n                  <td>{expense.type}</td>\r\n                  <td>\r\n                    <button className=\"delete-btn\" onClick={() => handleDeleteExpense(index)}>Delete</button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n              <tr>\r\n                <td>Total Expenses:</td>\r\n                <td>{totalExpenses}</td>\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n              </tr>\r\n              <tr>\r\n                <td>Balance:</td>\r\n                <td>{balance}</td>\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        <button onClick={exportPDF} className=\"button\">Export to PDF</button>\r\n        <PieChart data={expenses} /> {/* Include the PieChart component */}\r\n      </div>\r\n      <Footer /> {/* Include the Footer component */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,CAAAC,KAAK,KAAM,OAAO,CACzB,MAAO,iBAAiB,CACxB,MAAO,CAAAC,QAAQ,KAAM,YAAY,CACjC,MAAO,CAAAC,MAAM,KAAM,UAAU,CAAE;AAC/B,MAAO,YAAY,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}