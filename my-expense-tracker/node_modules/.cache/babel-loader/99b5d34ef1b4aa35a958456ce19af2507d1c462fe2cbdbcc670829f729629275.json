{"ast":null,"code":"// import React, { useState, useEffect } from 'react';\n// import jsPDF from 'jspdf';\n// import 'jspdf-autotable';\n// import './Home.css';\n\n// const Home = () => {\n//   const [income, setIncome] = useState('');\n//   const [expenses, setExpenses] = useState([]);\n//   const [expenseDate, setExpenseDate] = useState('');\n//   const [expenseTime, setExpenseTime] = useState('');\n//   const [expenseAmount, setExpenseAmount] = useState('');\n//   const [expenseMode, setExpenseMode] = useState('');\n//   const [expenseType, setExpenseType] = useState('');\n//   const [currentTime, setCurrentTime] = useState('');\n\n//   useEffect(() => {\n//     // Function to get current time\n//     const updateCurrentTime = () => {\n//       const now = new Date();\n//       setCurrentTime(now.toLocaleTimeString());\n//     };\n\n//     // Update the time every second\n//     const timer = setInterval(updateCurrentTime, 1000);\n\n//     // Set initial time\n//     updateCurrentTime();\n\n//     // Cleanup the interval on component unmount\n//     return () => clearInterval(timer);\n//   }, []);\n\n//   const handleAddIncome = () => {\n//     setIncome(parseInt(income) || 0);\n//   };\n\n//   const handleAddExpense = () => {\n//     if (expenseDate && expenseTime && expenseAmount && expenseMode && expenseType) {\n//       setExpenses([...expenses, { date: expenseDate, time: expenseTime, amount: parseInt(expenseAmount), mode: expenseMode, type: expenseType }]);\n//       setExpenseDate('');\n//       setExpenseTime('');\n//       setExpenseAmount('');\n//       setExpenseMode('');\n//       setExpenseType('');\n//     }\n//   };\n\n//   const handleDeleteExpense = (index) => {\n//     const newExpenses = expenses.filter((_, i) => i !== index);\n//     setExpenses(newExpenses);\n//   };\n\n//   const totalExpenses = expenses.reduce((acc, expense) => acc + expense.amount, 0);\n//   const balance = income - totalExpenses;\n\n//   const exportPDF = () => {\n//     const doc = new jsPDF();\n//     doc.setFontSize(12);\n//     doc.text('Expense Report', 14, 16);\n\n//     doc.autoTable({\n//       startY: 25,\n//       head: [['Date', 'Time', 'Amount', 'Mode', 'Type']],\n//       body: expenses.map(expense => [expense.date, expense.time, expense.amount, expense.mode, expense.type]),\n//       didDrawPage: (data) => {\n//         doc.text(`Total Expenses: ${totalExpenses}`, 14, data.cursor.y + 10);\n//         doc.text(`Balance: ${balance}`, 14, data.cursor.y + 20);\n//       }\n//     });\n\n//     doc.save('expense-report.pdf');\n//   };\n\n//   return (\n//     <div className=\"home-container\">\n//       <div className=\"home-content\">\n//         <div className=\"input-box\">\n//           <div className=\"form-group\">\n//             <label htmlFor=\"income\">Income:</label>\n//             <input\n//               type=\"number\"\n//               id=\"income\"\n//               value={income}\n//               onChange={(e) => setIncome(e.target.value)}\n//               className=\"input-field\"\n//               placeholder=\"Enter Your Income\"\n//             />\n//             <button onClick={handleAddIncome} className=\"button\">Add Income</button>\n//           </div>\n//           <div className=\"form-group\">\n//             <label htmlFor=\"expenseDate\">Date:</label>\n//             <input\n//               type=\"date\"\n//               id=\"expenseDate\"\n//               value={expenseDate}\n//               onChange={(e) => setExpenseDate(e.target.value)}\n//               className=\"input-field\"\n//             />\n//           </div>\n//           <div className=\"form-group\">\n//             <label htmlFor=\"expenseTime\">Time:</label>\n//             <input\n//               type=\"time\"\n//               id=\"expenseTime\"\n//               value={expenseTime}\n//               onChange={(e) => setExpenseTime(e.target.value)}\n//               className=\"input-field\"\n//             />\n//             <div id=\"currentTime\" className=\"time-container\">\n//               Current Time: {currentTime}\n//             </div>\n//           </div>\n//           <div className=\"form-group\">\n//             <label htmlFor=\"expenseAmount\">Amount:</label>\n//             <input\n//               type=\"number\"\n//               id=\"expenseAmount\"\n//               value={expenseAmount}\n//               onChange={(e) => setExpenseAmount(e.target.value)}\n//               className=\"input-field\"\n//               placeholder=\"Enter Amount\"\n//             />\n//           </div>\n//           <div className=\"form-group\">\n//             <label htmlFor=\"expenseMode\">Payment Method:</label>\n//             <select\n//               id=\"expenseMode\"\n//               value={expenseMode}\n//               onChange={(e) => setExpenseMode(e.target.value)}\n//               className=\"input-field\"\n//             >\n//               <option value=\"\">Select Mode</option>\n//               <option value=\"Cash\">Cash</option>\n//               <option value=\"CreditCard\">Credit Card</option>\n//               <option value=\"DebitCard\">Debit Card</option>\n//               <option value=\"BankTransfer\">Bank Transfer</option>\n//               <option value=\"UPI\">UPI</option>\n//             </select>\n//           </div>\n//           <div className=\"form-group\">\n//             <label htmlFor=\"expenseType\">Type:</label>\n//             <input\n//               type=\"text\"\n//               id=\"expenseType\"\n//               value={expenseType}\n//               onChange={(e) => setExpenseType(e.target.value)}\n//               className=\"input-field\"\n//               placeholder=\"Enter Type of Expense\"\n//             />\n//           </div>\n//           <button onClick={handleAddExpense} className=\"button\">Add Expense</button>\n//         </div>\n\n//         <div className=\"table-container\">\n//           <table>\n//             <thead>\n//               <tr>\n//                 <th>Your Income</th>\n//                 <th>{income}</th>\n//                 <th></th>\n//               </tr>\n//               <tr>\n//                 <th>Date</th>\n//                 <th>Time</th>\n//                 <th>Amount</th>\n//                 <th>Mode</th>\n//                 <th>Type</th>\n//                 <th>Action</th>\n//               </tr>\n//             </thead>\n//             <tbody>\n//               {expenses.map((expense, index) => (\n//                 <tr key={index}>\n//                   <td>{expense.date}</td>\n//                   <td>{expense.time}</td>\n//                   <td>{expense.amount}</td>\n//                   <td>{expense.mode}</td>\n//                   <td>{expense.type}</td>\n//                   <td>\n//                     <button className=\"delete-btn\" onClick={() => handleDeleteExpense(index)}>Delete</button>\n//                   </td>\n//                 </tr>\n//               ))}\n//               <tr>\n//                 <td>Total Expenses:</td>\n//                 <td>{totalExpenses}</td>\n//                 <td></td>\n//                 <td></td>\n//                 <td></td>\n//               </tr>\n//               <tr>\n//                 <td>Balance:</td>\n//                 <td>{balance}</td>\n//                 <td></td>\n//                 <td></td>\n//                 <td></td>\n//               </tr>\n//             </tbody>\n//           </table>\n//         </div>\n//         <button onClick={exportPDF} className=\"button\">Export to PDF</button>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Home;\n// src/components/Home.js\n// import React, { useState, useEffect } from 'react';\n// import jsPDF from 'jspdf';\n// import 'jspdf-autotable';\n// import PieChart from './PieChart'; // Correct import statement\n// import './Home.css';\n\n// const Home = () => {\n//   const [income, setIncome] = useState('');\n//   const [expenses, setExpenses] = useState([]);\n//   const [expenseDate, setExpenseDate] = useState('');\n//   const [expenseTime, setExpenseTime] = useState('');\n//   const [expenseAmount, setExpenseAmount] = useState('');\n//   const [expenseMode, setExpenseMode] = useState('');\n//   const [expenseType, setExpenseType] = useState('');\n//   const [currentTime, setCurrentTime] = useState('');\n\n//   useEffect(() => {\n//     const updateCurrentTime = () => {\n//       const now = new Date();\n//       setCurrentTime(now.toLocaleTimeString());\n//     };\n\n//     const timer = setInterval(updateCurrentTime, 1000);\n//     updateCurrentTime();\n//     return () => clearInterval(timer);\n//   }, []);\n\n//   const handleAddIncome = () => {\n//     setIncome(parseInt(income) || 0);\n//   };\n\n//   const handleAddExpense = () => {\n//     if (expenseDate && expenseTime && expenseAmount && expenseMode && expenseType) {\n//       setExpenses([...expenses, { date: expenseDate, time: expenseTime, amount: parseInt(expenseAmount), mode: expenseMode, type: expenseType }]);\n//       setExpenseDate('');\n//       setExpenseTime('');\n//       setExpenseAmount('');\n//       setExpenseMode('');\n//       setExpenseType('');\n//     }\n//   };\n\n//   const handleDeleteExpense = (index) => {\n//     const newExpenses = expenses.filter((_, i) => i !== index);\n//     setExpenses(newExpenses);\n//   };\n\n//   const totalExpenses = expenses.reduce((acc, expense) => acc + expense.amount, 0);\n//   const balance = income - totalExpenses;\n\n//   const exportPDF = () => {\n//     const doc = new jsPDF();\n//     doc.setFontSize(12);\n//     doc.text('Expense Report', 14, 16);\n\n//     doc.autoTable({\n//       startY: 25,\n//       head: [['Date', 'Time', 'Amount', 'Mode', 'Type']],\n//       body: expenses.map(expense => [expense.date, expense.time, expense.amount, expense.mode, expense.type]),\n//       didDrawPage: (data) => {\n//         doc.text(`Total Expenses: ${totalExpenses}`, 14, data.cursor.y + 10);\n//         doc.text(`Balance: ${balance}`, 14, data.cursor.y + 20);\n//       }\n//     });\n\n//     doc.save('expense-report.pdf');\n//   };\n\n//   return (\n//     <div className=\"home-container\">\n//       <div className=\"home-content\">\n//         {/* Input forms and buttons */}\n//         <div className=\"input-box\">\n//           <div className=\"form-group\">\n//             <label htmlFor=\"income\">Income:</label>\n//             <input\n//               type=\"number\"\n//               id=\"income\"\n//               value={income}\n//               onChange={(e) => setIncome(e.target.value)}\n//               className=\"input-field\"\n//               placeholder=\"Enter Your Income\"\n//             />\n//             <button onClick={handleAddIncome} className=\"button\">Add Income</button>\n//           </div>\n//           <div className=\"form-group\">\n//             <label htmlFor=\"expenseDate\">Date:</label>\n//             <input\n//               type=\"date\"\n//               id=\"expenseDate\"\n//               value={expenseDate}\n//               onChange={(e) => setExpenseDate(e.target.value)}\n//               className=\"input-field\"\n//             />\n//           </div>\n//           <div className=\"form-group\">\n//             <label htmlFor=\"expenseTime\">Time:</label>\n//             <input\n//               type=\"time\"\n//               id=\"expenseTime\"\n//               value={expenseTime}\n//               onChange={(e) => setExpenseTime(e.target.value)}\n//               className=\"input-field\"\n//             />\n//             <div id=\"currentTime\" className=\"time-container\">\n//               Current Time: {currentTime}\n//             </div>\n//           </div>\n//           <div className=\"form-group\">\n//             <label htmlFor=\"expenseAmount\">Amount:</label>\n//             <input\n//               type=\"number\"\n//               id=\"expenseAmount\"\n//               value={expenseAmount}\n//               onChange={(e) => setExpenseAmount(e.target.value)}\n//               className=\"input-field\"\n//               placeholder=\"Enter Amount\"\n//             />\n//           </div>\n//           <div className=\"form-group\">\n//             <label htmlFor=\"expenseMode\">Payment Method:</label>\n//             <select\n//               id=\"expenseMode\"\n//               value={expenseMode}\n//               onChange={(e) => setExpenseMode(e.target.value)}\n//               className=\"input-field\"\n//             >\n//               <option value=\"\">Select Mode</option>\n//               <option value=\"Cash\">Cash</option>\n//               <option value=\"CreditCard\">Credit Card</option>\n//               <option value=\"DebitCard\">Debit Card</option>\n//               <option value=\"BankTransfer\">Bank Transfer</option>\n//               <option value=\"UPI\">UPI</option>\n//             </select>\n//           </div>\n//           <div className=\"form-group\">\n//             <label htmlFor=\"expenseType\">Type:</label>\n//             <input\n//               type=\"text\"\n//               id=\"expenseType\"\n//               value={expenseType}\n//               onChange={(e) => setExpenseType(e.target.value)}\n//               className=\"input-field\"\n//               placeholder=\"Enter Type of Expense\"\n//             />\n//           </div>\n//           <button onClick={handleAddExpense} className=\"button\">Add Expense</button>\n//         </div>\n\n//         <div className=\"table-container\">\n//           <table>\n//             <thead>\n//               <tr>\n//                 <th>Your Income</th>\n//                 <th>{income}</th>\n//                 <th></th>\n//               </tr>\n//               <tr>\n//                 <th>Date</th>\n//                 <th>Time</th>\n//                 <th>Amount</th>\n//                 <th>Mode</th>\n//                 <th>Type</th>\n//                 <th>Action</th>\n//               </tr>\n//             </thead>\n//             <tbody>\n//               {expenses.map((expense, index) => (\n//                 <tr key={index}>\n//                   <td>{expense.date}</td>\n//                   <td>{expense.time}</td>\n//                   <td>{expense.amount}</td>\n//                   <td>{expense.mode}</td>\n//                   <td>{expense.type}</td>\n//                   <td>\n//                     <button className=\"delete-btn\" onClick={() => handleDeleteExpense(index)}>Delete</button>\n//                   </td>\n//                 </tr>\n//               ))}\n//               <tr>\n//                 <td>Total Expenses:</td>\n//                 <td>{totalExpenses}</td>\n//                 <td></td>\n//                 <td></td>\n//                 <td></td>\n//               </tr>\n//               <tr>\n//                 <td>Balance:</td>\n//                 <td>{balance}</td>\n//                 <td></td>\n//                 <td></td>\n//                 <td></td>\n//               </tr>\n//             </tbody>\n//           </table>\n//         </div>\n//         <button onClick={exportPDF} className=\"button\">Export to PDF</button>\n//         <PieChart data={expenses} /> {/* Include the PieChart component */}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Home;","map":{"version":3,"names":[],"sources":["D:/desktop/tracker/my-expense-tracker/src/components/Home.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import jsPDF from 'jspdf';\r\n// import 'jspdf-autotable';\r\n// import './Home.css';\r\n\r\n// const Home = () => {\r\n//   const [income, setIncome] = useState('');\r\n//   const [expenses, setExpenses] = useState([]);\r\n//   const [expenseDate, setExpenseDate] = useState('');\r\n//   const [expenseTime, setExpenseTime] = useState('');\r\n//   const [expenseAmount, setExpenseAmount] = useState('');\r\n//   const [expenseMode, setExpenseMode] = useState('');\r\n//   const [expenseType, setExpenseType] = useState('');\r\n//   const [currentTime, setCurrentTime] = useState('');\r\n\r\n//   useEffect(() => {\r\n//     // Function to get current time\r\n//     const updateCurrentTime = () => {\r\n//       const now = new Date();\r\n//       setCurrentTime(now.toLocaleTimeString());\r\n//     };\r\n\r\n//     // Update the time every second\r\n//     const timer = setInterval(updateCurrentTime, 1000);\r\n\r\n//     // Set initial time\r\n//     updateCurrentTime();\r\n\r\n//     // Cleanup the interval on component unmount\r\n//     return () => clearInterval(timer);\r\n//   }, []);\r\n\r\n//   const handleAddIncome = () => {\r\n//     setIncome(parseInt(income) || 0);\r\n//   };\r\n\r\n//   const handleAddExpense = () => {\r\n//     if (expenseDate && expenseTime && expenseAmount && expenseMode && expenseType) {\r\n//       setExpenses([...expenses, { date: expenseDate, time: expenseTime, amount: parseInt(expenseAmount), mode: expenseMode, type: expenseType }]);\r\n//       setExpenseDate('');\r\n//       setExpenseTime('');\r\n//       setExpenseAmount('');\r\n//       setExpenseMode('');\r\n//       setExpenseType('');\r\n//     }\r\n//   };\r\n\r\n//   const handleDeleteExpense = (index) => {\r\n//     const newExpenses = expenses.filter((_, i) => i !== index);\r\n//     setExpenses(newExpenses);\r\n//   };\r\n\r\n//   const totalExpenses = expenses.reduce((acc, expense) => acc + expense.amount, 0);\r\n//   const balance = income - totalExpenses;\r\n\r\n//   const exportPDF = () => {\r\n//     const doc = new jsPDF();\r\n//     doc.setFontSize(12);\r\n//     doc.text('Expense Report', 14, 16);\r\n\r\n//     doc.autoTable({\r\n//       startY: 25,\r\n//       head: [['Date', 'Time', 'Amount', 'Mode', 'Type']],\r\n//       body: expenses.map(expense => [expense.date, expense.time, expense.amount, expense.mode, expense.type]),\r\n//       didDrawPage: (data) => {\r\n//         doc.text(`Total Expenses: ${totalExpenses}`, 14, data.cursor.y + 10);\r\n//         doc.text(`Balance: ${balance}`, 14, data.cursor.y + 20);\r\n//       }\r\n//     });\r\n\r\n//     doc.save('expense-report.pdf');\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"home-container\">\r\n//       <div className=\"home-content\">\r\n//         <div className=\"input-box\">\r\n//           <div className=\"form-group\">\r\n//             <label htmlFor=\"income\">Income:</label>\r\n//             <input\r\n//               type=\"number\"\r\n//               id=\"income\"\r\n//               value={income}\r\n//               onChange={(e) => setIncome(e.target.value)}\r\n//               className=\"input-field\"\r\n//               placeholder=\"Enter Your Income\"\r\n//             />\r\n//             <button onClick={handleAddIncome} className=\"button\">Add Income</button>\r\n//           </div>\r\n//           <div className=\"form-group\">\r\n//             <label htmlFor=\"expenseDate\">Date:</label>\r\n//             <input\r\n//               type=\"date\"\r\n//               id=\"expenseDate\"\r\n//               value={expenseDate}\r\n//               onChange={(e) => setExpenseDate(e.target.value)}\r\n//               className=\"input-field\"\r\n//             />\r\n//           </div>\r\n//           <div className=\"form-group\">\r\n//             <label htmlFor=\"expenseTime\">Time:</label>\r\n//             <input\r\n//               type=\"time\"\r\n//               id=\"expenseTime\"\r\n//               value={expenseTime}\r\n//               onChange={(e) => setExpenseTime(e.target.value)}\r\n//               className=\"input-field\"\r\n//             />\r\n//             <div id=\"currentTime\" className=\"time-container\">\r\n//               Current Time: {currentTime}\r\n//             </div>\r\n//           </div>\r\n//           <div className=\"form-group\">\r\n//             <label htmlFor=\"expenseAmount\">Amount:</label>\r\n//             <input\r\n//               type=\"number\"\r\n//               id=\"expenseAmount\"\r\n//               value={expenseAmount}\r\n//               onChange={(e) => setExpenseAmount(e.target.value)}\r\n//               className=\"input-field\"\r\n//               placeholder=\"Enter Amount\"\r\n//             />\r\n//           </div>\r\n//           <div className=\"form-group\">\r\n//             <label htmlFor=\"expenseMode\">Payment Method:</label>\r\n//             <select\r\n//               id=\"expenseMode\"\r\n//               value={expenseMode}\r\n//               onChange={(e) => setExpenseMode(e.target.value)}\r\n//               className=\"input-field\"\r\n//             >\r\n//               <option value=\"\">Select Mode</option>\r\n//               <option value=\"Cash\">Cash</option>\r\n//               <option value=\"CreditCard\">Credit Card</option>\r\n//               <option value=\"DebitCard\">Debit Card</option>\r\n//               <option value=\"BankTransfer\">Bank Transfer</option>\r\n//               <option value=\"UPI\">UPI</option>\r\n//             </select>\r\n//           </div>\r\n//           <div className=\"form-group\">\r\n//             <label htmlFor=\"expenseType\">Type:</label>\r\n//             <input\r\n//               type=\"text\"\r\n//               id=\"expenseType\"\r\n//               value={expenseType}\r\n//               onChange={(e) => setExpenseType(e.target.value)}\r\n//               className=\"input-field\"\r\n//               placeholder=\"Enter Type of Expense\"\r\n//             />\r\n//           </div>\r\n//           <button onClick={handleAddExpense} className=\"button\">Add Expense</button>\r\n//         </div>\r\n\r\n//         <div className=\"table-container\">\r\n//           <table>\r\n//             <thead>\r\n//               <tr>\r\n//                 <th>Your Income</th>\r\n//                 <th>{income}</th>\r\n//                 <th></th>\r\n//               </tr>\r\n//               <tr>\r\n//                 <th>Date</th>\r\n//                 <th>Time</th>\r\n//                 <th>Amount</th>\r\n//                 <th>Mode</th>\r\n//                 <th>Type</th>\r\n//                 <th>Action</th>\r\n//               </tr>\r\n//             </thead>\r\n//             <tbody>\r\n//               {expenses.map((expense, index) => (\r\n//                 <tr key={index}>\r\n//                   <td>{expense.date}</td>\r\n//                   <td>{expense.time}</td>\r\n//                   <td>{expense.amount}</td>\r\n//                   <td>{expense.mode}</td>\r\n//                   <td>{expense.type}</td>\r\n//                   <td>\r\n//                     <button className=\"delete-btn\" onClick={() => handleDeleteExpense(index)}>Delete</button>\r\n//                   </td>\r\n//                 </tr>\r\n//               ))}\r\n//               <tr>\r\n//                 <td>Total Expenses:</td>\r\n//                 <td>{totalExpenses}</td>\r\n//                 <td></td>\r\n//                 <td></td>\r\n//                 <td></td>\r\n//               </tr>\r\n//               <tr>\r\n//                 <td>Balance:</td>\r\n//                 <td>{balance}</td>\r\n//                 <td></td>\r\n//                 <td></td>\r\n//                 <td></td>\r\n//               </tr>\r\n//             </tbody>\r\n//           </table>\r\n//         </div>\r\n//         <button onClick={exportPDF} className=\"button\">Export to PDF</button>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Home;\r\n// src/components/Home.js\r\n// import React, { useState, useEffect } from 'react';\r\n// import jsPDF from 'jspdf';\r\n// import 'jspdf-autotable';\r\n// import PieChart from './PieChart'; // Correct import statement\r\n// import './Home.css';\r\n\r\n// const Home = () => {\r\n//   const [income, setIncome] = useState('');\r\n//   const [expenses, setExpenses] = useState([]);\r\n//   const [expenseDate, setExpenseDate] = useState('');\r\n//   const [expenseTime, setExpenseTime] = useState('');\r\n//   const [expenseAmount, setExpenseAmount] = useState('');\r\n//   const [expenseMode, setExpenseMode] = useState('');\r\n//   const [expenseType, setExpenseType] = useState('');\r\n//   const [currentTime, setCurrentTime] = useState('');\r\n\r\n//   useEffect(() => {\r\n//     const updateCurrentTime = () => {\r\n//       const now = new Date();\r\n//       setCurrentTime(now.toLocaleTimeString());\r\n//     };\r\n\r\n//     const timer = setInterval(updateCurrentTime, 1000);\r\n//     updateCurrentTime();\r\n//     return () => clearInterval(timer);\r\n//   }, []);\r\n\r\n//   const handleAddIncome = () => {\r\n//     setIncome(parseInt(income) || 0);\r\n//   };\r\n\r\n//   const handleAddExpense = () => {\r\n//     if (expenseDate && expenseTime && expenseAmount && expenseMode && expenseType) {\r\n//       setExpenses([...expenses, { date: expenseDate, time: expenseTime, amount: parseInt(expenseAmount), mode: expenseMode, type: expenseType }]);\r\n//       setExpenseDate('');\r\n//       setExpenseTime('');\r\n//       setExpenseAmount('');\r\n//       setExpenseMode('');\r\n//       setExpenseType('');\r\n//     }\r\n//   };\r\n\r\n//   const handleDeleteExpense = (index) => {\r\n//     const newExpenses = expenses.filter((_, i) => i !== index);\r\n//     setExpenses(newExpenses);\r\n//   };\r\n\r\n//   const totalExpenses = expenses.reduce((acc, expense) => acc + expense.amount, 0);\r\n//   const balance = income - totalExpenses;\r\n\r\n//   const exportPDF = () => {\r\n//     const doc = new jsPDF();\r\n//     doc.setFontSize(12);\r\n//     doc.text('Expense Report', 14, 16);\r\n\r\n//     doc.autoTable({\r\n//       startY: 25,\r\n//       head: [['Date', 'Time', 'Amount', 'Mode', 'Type']],\r\n//       body: expenses.map(expense => [expense.date, expense.time, expense.amount, expense.mode, expense.type]),\r\n//       didDrawPage: (data) => {\r\n//         doc.text(`Total Expenses: ${totalExpenses}`, 14, data.cursor.y + 10);\r\n//         doc.text(`Balance: ${balance}`, 14, data.cursor.y + 20);\r\n//       }\r\n//     });\r\n\r\n//     doc.save('expense-report.pdf');\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"home-container\">\r\n//       <div className=\"home-content\">\r\n//         {/* Input forms and buttons */}\r\n//         <div className=\"input-box\">\r\n//           <div className=\"form-group\">\r\n//             <label htmlFor=\"income\">Income:</label>\r\n//             <input\r\n//               type=\"number\"\r\n//               id=\"income\"\r\n//               value={income}\r\n//               onChange={(e) => setIncome(e.target.value)}\r\n//               className=\"input-field\"\r\n//               placeholder=\"Enter Your Income\"\r\n//             />\r\n//             <button onClick={handleAddIncome} className=\"button\">Add Income</button>\r\n//           </div>\r\n//           <div className=\"form-group\">\r\n//             <label htmlFor=\"expenseDate\">Date:</label>\r\n//             <input\r\n//               type=\"date\"\r\n//               id=\"expenseDate\"\r\n//               value={expenseDate}\r\n//               onChange={(e) => setExpenseDate(e.target.value)}\r\n//               className=\"input-field\"\r\n//             />\r\n//           </div>\r\n//           <div className=\"form-group\">\r\n//             <label htmlFor=\"expenseTime\">Time:</label>\r\n//             <input\r\n//               type=\"time\"\r\n//               id=\"expenseTime\"\r\n//               value={expenseTime}\r\n//               onChange={(e) => setExpenseTime(e.target.value)}\r\n//               className=\"input-field\"\r\n//             />\r\n//             <div id=\"currentTime\" className=\"time-container\">\r\n//               Current Time: {currentTime}\r\n//             </div>\r\n//           </div>\r\n//           <div className=\"form-group\">\r\n//             <label htmlFor=\"expenseAmount\">Amount:</label>\r\n//             <input\r\n//               type=\"number\"\r\n//               id=\"expenseAmount\"\r\n//               value={expenseAmount}\r\n//               onChange={(e) => setExpenseAmount(e.target.value)}\r\n//               className=\"input-field\"\r\n//               placeholder=\"Enter Amount\"\r\n//             />\r\n//           </div>\r\n//           <div className=\"form-group\">\r\n//             <label htmlFor=\"expenseMode\">Payment Method:</label>\r\n//             <select\r\n//               id=\"expenseMode\"\r\n//               value={expenseMode}\r\n//               onChange={(e) => setExpenseMode(e.target.value)}\r\n//               className=\"input-field\"\r\n//             >\r\n//               <option value=\"\">Select Mode</option>\r\n//               <option value=\"Cash\">Cash</option>\r\n//               <option value=\"CreditCard\">Credit Card</option>\r\n//               <option value=\"DebitCard\">Debit Card</option>\r\n//               <option value=\"BankTransfer\">Bank Transfer</option>\r\n//               <option value=\"UPI\">UPI</option>\r\n//             </select>\r\n//           </div>\r\n//           <div className=\"form-group\">\r\n//             <label htmlFor=\"expenseType\">Type:</label>\r\n//             <input\r\n//               type=\"text\"\r\n//               id=\"expenseType\"\r\n//               value={expenseType}\r\n//               onChange={(e) => setExpenseType(e.target.value)}\r\n//               className=\"input-field\"\r\n//               placeholder=\"Enter Type of Expense\"\r\n//             />\r\n//           </div>\r\n//           <button onClick={handleAddExpense} className=\"button\">Add Expense</button>\r\n//         </div>\r\n\r\n//         <div className=\"table-container\">\r\n//           <table>\r\n//             <thead>\r\n//               <tr>\r\n//                 <th>Your Income</th>\r\n//                 <th>{income}</th>\r\n//                 <th></th>\r\n//               </tr>\r\n//               <tr>\r\n//                 <th>Date</th>\r\n//                 <th>Time</th>\r\n//                 <th>Amount</th>\r\n//                 <th>Mode</th>\r\n//                 <th>Type</th>\r\n//                 <th>Action</th>\r\n//               </tr>\r\n//             </thead>\r\n//             <tbody>\r\n//               {expenses.map((expense, index) => (\r\n//                 <tr key={index}>\r\n//                   <td>{expense.date}</td>\r\n//                   <td>{expense.time}</td>\r\n//                   <td>{expense.amount}</td>\r\n//                   <td>{expense.mode}</td>\r\n//                   <td>{expense.type}</td>\r\n//                   <td>\r\n//                     <button className=\"delete-btn\" onClick={() => handleDeleteExpense(index)}>Delete</button>\r\n//                   </td>\r\n//                 </tr>\r\n//               ))}\r\n//               <tr>\r\n//                 <td>Total Expenses:</td>\r\n//                 <td>{totalExpenses}</td>\r\n//                 <td></td>\r\n//                 <td></td>\r\n//                 <td></td>\r\n//               </tr>\r\n//               <tr>\r\n//                 <td>Balance:</td>\r\n//                 <td>{balance}</td>\r\n//                 <td></td>\r\n//                 <td></td>\r\n//                 <td></td>\r\n//               </tr>\r\n//             </tbody>\r\n//           </table>\r\n//         </div>\r\n//         <button onClick={exportPDF} className=\"button\">Export to PDF</button>\r\n//         <PieChart data={expenses} /> {/* Include the PieChart component */}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Home;\r\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}