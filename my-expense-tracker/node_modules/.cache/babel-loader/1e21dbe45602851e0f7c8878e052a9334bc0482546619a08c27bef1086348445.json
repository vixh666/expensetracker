{"ast":null,"code":"// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import './Auth.css';\n// import Navbar from './Navbar'; // Import the Navbar component\n// const Register = () => {\n//   const [email, setEmail] = useState('');\n//   const [phone, setPhone] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [confirmPassword, setConfirmPassword] = useState('');\n//   const [successMessage, setSuccessMessage] = useState('');\n//   const navigate = useNavigate();\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n//     if (password !== confirmPassword) {\n//       alert('Passwords do not match');\n//       return;\n//     }\n//     // Implement registration logic here\n//     setSuccessMessage('Register successfully');\n//     setTimeout(() => navigate('/'), 2000); // Redirect to home page after 2 seconds\n//   };\n//   return (\n//     <div>\n//       <Navbar /> {/* Include the Navbar component */}\n//       <div className=\"auth-container\">\n//         <div className=\"auth-form-box\">\n//           <div className=\"auth-form\">\n//             <h2>Register</h2>\n//             <form onSubmit={handleSubmit}>\n//               <div>\n//                 <label>Email:</label>\n//                 <i className=\"fa fa-envelope\"></i>\n//                 <input\n//                   type=\"email\"\n//                   value={email}\n//                   onChange={(e) => setEmail(e.target.value)}\n//                   required\n//                 />\n//               </div>\n//               <div>\n//                 <label>Phone Number:</label>\n//                 <i className=\"fa fa-phone\"></i>\n//                 <input\n//                   type=\"text\"\n//                   value={phone}\n//                   onChange={(e) => setPhone(e.target.value)}\n//                   required\n//                 />\n//               </div>\n//               <div>\n//                 <label>Password:</label>\n//                 <i className=\"fa fa-lock\"></i>\n//                 <input\n//                   type=\"password\"\n//                   value={password}\n//                   onChange={(e) => setPassword(e.target.value)}\n//                   required\n//                 />\n//               </div>\n//               <div>\n//                 <label>Confirm Password:</label>\n//                 <i className=\"fa fa-lock\"></i>\n//                 <input\n//                   type=\"password\"\n//                   value={confirmPassword}\n//                   onChange={(e) => setConfirmPassword(e.target.value)}\n//                   required\n//                 />\n//               </div>\n//               <button type=\"submit\" style={{ fontWeight: 'bold' }}>Register</button>\n//             </form>\n//             {successMessage && <p className=\"success-message\">{successMessage}</p>}\n//           </div>\n//         </div>\n//         <div className=\"auth-bg\"></div>\n//       </div>\n//     </div>\n//   );\n// };\n// export default Register;\nimport React,{useState}from'react';import{useNavigate}from'react-router-dom';import'./Auth.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Register=()=>{const[email,setEmail]=useState('');const[phone,setPhone]=useState('');const[password,setPassword]=useState('');const[confirmPassword,setConfirmPassword]=useState('');const[successMessage,setSuccessMessage]=useState('');const navigate=useNavigate();const handleSubmit=e=>{e.preventDefault();if(password!==confirmPassword){alert('Passwords do not match');return;}// Implement registration logic here\nsetSuccessMessage('Registered successfully');const username=\"John Doe\";// Replace with actual username logic\nsetTimeout(()=>navigate('/welcome',{state:{username}}),2000);// Redirect after success message\n};return/*#__PURE__*/_jsxs(\"div\",{className:\"auth-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"auth-form-box\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"auth-form\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"auth-title\",children:\"Register\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Email:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",value:email,onChange:e=>setEmail(e.target.value),required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Password:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",value:password,onChange:e=>setPassword(e.target.value),required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Confirm Password:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",value:confirmPassword,onChange:e=>setConfirmPassword(e.target.value),required:true})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"auth-button\",children:\"Register\"})]}),successMessage&&/*#__PURE__*/_jsx(\"p\",{className:\"success-message\",children:successMessage})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"auth-bg\"})]});};export default Register;","map":{"version":3,"names":["React","useState","useNavigate","jsx","_jsx","jsxs","_jsxs","Register","email","setEmail","phone","setPhone","password","setPassword","confirmPassword","setConfirmPassword","successMessage","setSuccessMessage","navigate","handleSubmit","e","preventDefault","alert","username","setTimeout","state","className","children","onSubmit","type","value","onChange","target","required"],"sources":["D:/desktop/tracker/my-expense-tracker/src/components/Register.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import './Auth.css';\r\n// import Navbar from './Navbar'; // Import the Navbar component\r\n\r\n// const Register = () => {\r\n//   const [email, setEmail] = useState('');\r\n//   const [phone, setPhone] = useState('');\r\n//   const [password, setPassword] = useState('');\r\n//   const [confirmPassword, setConfirmPassword] = useState('');\r\n//   const [successMessage, setSuccessMessage] = useState('');\r\n//   const navigate = useNavigate();\r\n\r\n//   const handleSubmit = (e) => {\r\n//     e.preventDefault();\r\n//     if (password !== confirmPassword) {\r\n//       alert('Passwords do not match');\r\n//       return;\r\n//     }\r\n//     // Implement registration logic here\r\n//     setSuccessMessage('Register successfully');\r\n//     setTimeout(() => navigate('/'), 2000); // Redirect to home page after 2 seconds\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <Navbar /> {/* Include the Navbar component */}\r\n//       <div className=\"auth-container\">\r\n//         <div className=\"auth-form-box\">\r\n//           <div className=\"auth-form\">\r\n//             <h2>Register</h2>\r\n//             <form onSubmit={handleSubmit}>\r\n//               <div>\r\n//                 <label>Email:</label>\r\n//                 <i className=\"fa fa-envelope\"></i>\r\n//                 <input\r\n//                   type=\"email\"\r\n//                   value={email}\r\n//                   onChange={(e) => setEmail(e.target.value)}\r\n//                   required\r\n//                 />\r\n//               </div>\r\n//               <div>\r\n//                 <label>Phone Number:</label>\r\n//                 <i className=\"fa fa-phone\"></i>\r\n//                 <input\r\n//                   type=\"text\"\r\n//                   value={phone}\r\n//                   onChange={(e) => setPhone(e.target.value)}\r\n//                   required\r\n//                 />\r\n//               </div>\r\n//               <div>\r\n//                 <label>Password:</label>\r\n//                 <i className=\"fa fa-lock\"></i>\r\n//                 <input\r\n//                   type=\"password\"\r\n//                   value={password}\r\n//                   onChange={(e) => setPassword(e.target.value)}\r\n//                   required\r\n//                 />\r\n//               </div>\r\n//               <div>\r\n//                 <label>Confirm Password:</label>\r\n//                 <i className=\"fa fa-lock\"></i>\r\n//                 <input\r\n//                   type=\"password\"\r\n//                   value={confirmPassword}\r\n//                   onChange={(e) => setConfirmPassword(e.target.value)}\r\n//                   required\r\n//                 />\r\n//               </div>\r\n//               <button type=\"submit\" style={{ fontWeight: 'bold' }}>Register</button>\r\n//             </form>\r\n//             {successMessage && <p className=\"success-message\">{successMessage}</p>}\r\n//           </div>\r\n//         </div>\r\n//         <div className=\"auth-bg\"></div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Register;\r\n\r\nimport React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './Auth.css';\r\n\r\nconst Register = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [phone, setPhone] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [successMessage, setSuccessMessage] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (password !== confirmPassword) {\r\n      alert('Passwords do not match');\r\n      return;\r\n    }\r\n    // Implement registration logic here\r\n    setSuccessMessage('Registered successfully');\r\n    const username = \"John Doe\"; // Replace with actual username logic\r\n    setTimeout(() => navigate('/welcome', { state: { username } }), 2000); // Redirect after success message\r\n  };\r\n\r\n  return (\r\n    <div className=\"auth-container\">\r\n      <div className=\"auth-form-box\">\r\n        <div className=\"auth-form\">\r\n          <h2 className=\"auth-title\">Register</h2>\r\n          <form onSubmit={handleSubmit}>\r\n            <div className=\"form-group\">\r\n              <label>Email:</label>\r\n              <input\r\n                type=\"email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n                required\r\n              />\r\n            </div>\r\n            {/* <div className=\"form-group\">\r\n              <label>Phone Number:</label>\r\n              <input\r\n                type=\"text\"\r\n                value={phone}\r\n                onChange={(e) => setPhone(e.target.value)}\r\n                required\r\n              />\r\n            </div> */}\r\n            <div className=\"form-group\">\r\n              <label>Password:</label>\r\n              <input\r\n                type=\"password\"\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Confirm Password:</label>\r\n              <input\r\n                type=\"password\"\r\n                value={confirmPassword}\r\n                onChange={(e) => setConfirmPassword(e.target.value)}\r\n                required\r\n              />\r\n            </div>\r\n            <button type=\"submit\" className=\"auth-button\">Register</button>\r\n          </form>\r\n          {successMessage && <p className=\"success-message\">{successMessage}</p>}\r\n        </div>\r\n      </div>\r\n      <div className=\"auth-bg\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}