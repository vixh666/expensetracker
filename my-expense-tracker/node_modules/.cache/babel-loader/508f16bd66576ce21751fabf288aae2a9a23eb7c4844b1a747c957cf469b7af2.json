{"ast":null,"code":"var _jsxFileName = \"D:\\\\desktop\\\\tracker\\\\my-expense-tracker\\\\src\\\\components\\\\Home.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import jsPDF from 'jspdf';\n// import 'jspdf-autotable';\n// import PieChart from './PieChart';\n// import Footer from './Footer'; // Import the Footer component\n// import './Home.css';\n\n// const Home = () => {\n//   const [income, setIncome] = useState('');\n//   const [expenses, setExpenses] = useState([]);\n//   const [expenseDate, setExpenseDate] = useState('');\n//   const [expenseTime, setExpenseTime] = useState('');\n//   const [expenseAmount, setExpenseAmount] = useState('');\n//   const [expenseMode, setExpenseMode] = useState('');\n//   const [expenseType, setExpenseType] = useState('');\n//   const [currentTime, setCurrentTime] = useState('');\n\n//   useEffect(() => {\n//     const updateCurrentTime = () => {\n//       const now = new Date();\n//       setCurrentTime(now.toLocaleTimeString());\n//     };\n\n//     const timer = setInterval(updateCurrentTime, 1000);\n//     updateCurrentTime();\n//     return () => clearInterval(timer);\n//   }, []);\n\n//   const handleAddIncome = () => {\n//     setIncome(parseInt(income) || 0);\n//   };\n\n//   const handleAddExpense = () => {\n//     if (expenseDate && expenseTime && expenseAmount && expenseMode && expenseType) {\n//       setExpenses([...expenses, { date: expenseDate, time: expenseTime, amount: parseInt(expenseAmount), mode: expenseMode, type: expenseType }]);\n//       setExpenseDate('');\n//       setExpenseTime('');\n//       setExpenseAmount('');\n//       setExpenseMode('');\n//       setExpenseType('');\n//     }\n//   };\n\n//   const handleDeleteExpense = (index) => {\n//     const newExpenses = expenses.filter((_, i) => i !== index);\n//     setExpenses(newExpenses);\n//   };\n\n//   const totalExpenses = expenses.reduce((acc, expense) => acc + expense.amount, 0);\n//   const balance = income - totalExpenses;\n\n//   const exportPDF = () => {\n//     const doc = new jsPDF();\n//     doc.setFontSize(12);\n//     doc.text('Expense Report', 14, 16);\n\n//     doc.autoTable({\n//       startY: 25,\n//       head: [['Date', 'Time', 'Amount', 'Mode', 'Type']],\n//       body: expenses.map(expense => [expense.date, expense.time, expense.amount, expense.mode, expense.type]),\n//       didDrawPage: (data) => {\n//         doc.text(`Total Expenses: ${totalExpenses}`, 14, data.cursor.y + 10);\n//         doc.text(`Balance: ${balance}`, 14, data.cursor.y + 20);\n//       }\n//     });\n\n//     doc.save('expense-report.pdf');\n//   };\n\n//   return (\n//     <div className=\"home-container\">\n//       <div className=\"home-content\">\n//         {/* Input forms and buttons */}\n//         <div className=\"input-box\">\n//           <div className=\"form-group\">\n//             <label htmlFor=\"income\">Income:</label>\n//             <input\n//               type=\"number\"\n//               id=\"income\"\n//               value={income}\n//               onChange={(e) => setIncome(e.target.value)}\n//               className=\"input-field\"\n//               placeholder=\"Enter Your Income\"\n//             />\n//             <button onClick={handleAddIncome} className=\"button\">Add Income</button>\n//           </div>\n//           <div className=\"form-group\">\n//             <label htmlFor=\"expenseDate\">Date:</label>\n//             <input\n//               type=\"date\"\n//               id=\"expenseDate\"\n//               value={expenseDate}\n//               onChange={(e) => setExpenseDate(e.target.value)}\n//               className=\"input-field\"\n//             />\n//           </div>\n//           <div className=\"form-group\">\n//             <label htmlFor=\"expenseTime\">Time:</label>\n//             <input\n//               type=\"time\"\n//               id=\"expenseTime\"\n//               value={expenseTime}\n//               onChange={(e) => setExpenseTime(e.target.value)}\n//               className=\"input-field\"\n//             />\n//             <div id=\"currentTime\" className=\"time-container\">\n//               Current Time: {currentTime}\n//             </div>\n//           </div>\n//           <div className=\"form-group\">\n//             <label htmlFor=\"expenseAmount\">Amount:</label>\n//             <input\n//               type=\"number\"\n//               id=\"expenseAmount\"\n//               value={expenseAmount}\n//               onChange={(e) => setExpenseAmount(e.target.value)}\n//               className=\"input-field\"\n//               placeholder=\"Enter Amount\"\n//             />\n//           </div>\n//           <div className=\"form-group\">\n//             <label htmlFor=\"expenseMode\">Payment Method:</label>\n//             <select\n//               id=\"expenseMode\"\n//               value={expenseMode}\n//               onChange={(e) => setExpenseMode(e.target.value)}\n//               className=\"input-field\"\n//             >\n//               <option value=\"\">Select Mode</option>\n//               <option value=\"Cash\">Cash</option>\n//               <option value=\"CreditCard\">Credit Card</option>\n//               <option value=\"DebitCard\">Debit Card</option>\n//               <option value=\"BankTransfer\">Bank Transfer</option>\n//               <option value=\"UPI\">UPI</option>\n//             </select>\n//           </div>\n//           <div className=\"form-group\">\n//             <label htmlFor=\"expenseType\">Type:</label>\n//             <input\n//               type=\"text\"\n//               id=\"expenseType\"\n//               value={expenseType}\n//               onChange={(e) => setExpenseType(e.target.value)}\n//               className=\"input-field\"\n//               placeholder=\"Enter Type of Expense\"\n//             />\n//           </div>\n//           <button onClick={handleAddExpense} className=\"button\">Add Expense</button>\n//         </div>\n\n//         <div className=\"table-container\">\n//           <table>\n//             <thead>\n//               <tr>\n//                 <th>Your Income</th>\n//                 <th>{income}</th>\n//                 <th></th>\n//               </tr>\n//               <tr>\n//                 <th>Date</th>\n//                 <th>Time</th>\n//                 <th>Amount</th>\n//                 <th>Mode</th>\n//                 <th>Type</th>\n//                 <th>Action</th>\n//               </tr>\n//             </thead>\n//             <tbody>\n//               {expenses.map((expense, index) => (\n//                 <tr key={index}>\n//                   <td>{expense.date}</td>\n//                   <td>{expense.time}</td>\n//                   <td>{expense.amount}</td>\n//                   <td>{expense.mode}</td>\n//                   <td>{expense.type}</td>\n//                   <td>\n//                     <button className=\"delete-btn\" onClick={() => handleDeleteExpense(index)}>Delete</button>\n//                   </td>\n//                 </tr>\n//               ))}\n//               <tr>\n//                 <td>Total Expenses:</td>\n//                 <td>{totalExpenses}</td>\n//                 <td></td>\n//                 <td></td>\n//                 <td></td>\n//               </tr>\n//               <tr>\n//                 <td>Balance:</td>\n//                 <td>{balance}</td>\n//                 <td></td>\n//                 <td></td>\n//                 <td></td>\n//               </tr>\n//             </tbody>\n//           </table>\n//         </div>\n//         <button onClick={exportPDF} className=\"button\">Export to PDF</button>\n//         <PieChart data={expenses} /> {/* Include the PieChart component */}\n//       </div>\n//       <br></br>\n//       <Footer /> {/* Include the Footer component */}\n//     </div>\n//   );\n// };\n\n// export default Home;\n// import React, { useState } from 'react';\n// import jsPDF from 'jspdf';\n// import 'jspdf-autotable';\n// import PieChart from './PieChart';\n// import Footer from './Footer'; // Import the Footer component\n// import './Home.css';\n\n// const Home = () => {\n//   const [income, setIncome] = useState('');\n//   const [expenses, setExpenses] = useState([]);\n//   const [expenseDate, setExpenseDate] = useState('');\n//   const [expenseTime, setExpenseTime] = useState('');\n//   const [expenseAmount, setExpenseAmount] = useState('');\n//   const [expenseMode, setExpenseMode] = useState('');\n//   const [expenseType, setExpenseType] = useState('');\n\n//   const handleAddIncome = () => {\n//     setIncome(parseInt(income) || 0);\n//   };\n\n//   const handleAddExpense = () => {\n//     if (expenseDate && expenseTime && expenseAmount && expenseMode && expenseType) {\n//       setExpenses([...expenses, { date: expenseDate, time: expenseTime, amount: parseInt(expenseAmount), mode: expenseMode, type: expenseType }]);\n//       setExpenseDate('');\n//       setExpenseTime('');\n//       setExpenseAmount('');\n//       setExpenseMode('');\n//       setExpenseType('');\n//     }\n//   };\n\n//   const handleDeleteExpense = (index) => {\n//     const newExpenses = expenses.filter((_, i) => i !== index);\n//     setExpenses(newExpenses);\n//   };\n\n//   const totalExpenses = expenses.reduce((acc, expense) => acc + expense.amount, 0);\n//   const balance = income - totalExpenses;\n\n//   const exportPDF = () => {\n//     const doc = new jsPDF();\n//     doc.setFontSize(12);\n//     doc.text('Expense Report', 14, 16);\n\n//     doc.autoTable({\n//       startY: 25,\n//       head: [['Date', 'Time', 'Amount', 'Mode', 'Type']],\n//       body: expenses.map(expense => [expense.date, expense.time, expense.amount, expense.mode, expense.type]),\n//       didDrawPage: (data) => {\n//         doc.text(`Total Expenses: ${totalExpenses}`, 14, data.cursor.y + 10);\n//         doc.text(`Balance: ${balance}`, 14, data.cursor.y + 20);\n//       }\n//     });\n\n//     doc.save('expense-report.pdf');\n//   };\n\n//   return (\n//     <div className=\"home-container\">\n//       <div className=\"home-content\">\n//         {/* Input forms and buttons */}\n//         <div className=\"input-box\">\n//           <div className=\"form-group\">\n//             <label htmlFor=\"income\">Income:</label>\n//             <input\n//               type=\"number\"\n//               id=\"income\"\n//               value={income}\n//               onChange={(e) => setIncome(e.target.value)}\n//               className=\"input-field\"\n//               placeholder=\"Enter Your Income\"\n//             />\n//             <button onClick={handleAddIncome} className=\"button\">Add Income</button>\n//           </div>\n//           <div className=\"form-group\">\n//             <label htmlFor=\"expenseDate\">Date:</label>\n//             <input\n//               type=\"date\"\n//               id=\"expenseDate\"\n//               value={expenseDate}\n//               onChange={(e) => setExpenseDate(e.target.value)}\n//               className=\"input-field\"\n//             />\n//           </div>\n//           <div className=\"form-group\">\n//             <label htmlFor=\"expenseTime\">Time:</label>\n//             <input\n//               type=\"time\"\n//               id=\"expenseTime\"\n//               value={expenseTime}\n//               onChange={(e) => setExpenseTime(e.target.value)}\n//               className=\"input-field\"\n//             />\n//           </div>\n//           <div className=\"form-group\">\n//             <label htmlFor=\"expenseAmount\">Amount:</label>\n//             <input\n//               type=\"number\"\n//               id=\"expenseAmount\"\n//               value={expenseAmount}\n//               onChange={(e) => setExpenseAmount(e.target.value)}\n//               className=\"input-field\"\n//               placeholder=\"Enter Amount\"\n//             />\n//           </div>\n//           <div className=\"form-group\">\n//             <label htmlFor=\"expenseMode\">Payment Method:</label>\n//             <select\n//               id=\"expenseMode\"\n//               value={expenseMode}\n//               onChange={(e) => setExpenseMode(e.target.value)}\n//               className=\"input-field\"\n//             >\n//               <option value=\"\">Select Mode</option>\n//               <option value=\"Cash\">Cash</option>\n//               <option value=\"CreditCard\">Credit Card</option>\n//               <option value=\"DebitCard\">Debit Card</option>\n//               <option value=\"BankTransfer\">Bank Transfer</option>\n//               <option value=\"UPI\">UPI</option>\n//             </select>\n//           </div>\n//           <div className=\"form-group\">\n//             <label htmlFor=\"expenseType\">Type:</label>\n//             <input\n//               type=\"text\"\n//               id=\"expenseType\"\n//               value={expenseType}\n//               onChange={(e) => setExpenseType(e.target.value)}\n//               className=\"input-field\"\n//               placeholder=\"Enter Type of Expense\"\n//             />\n//           </div>\n//           <button onClick={handleAddExpense} className=\"button\">Add Expense</button>\n//         </div>\n\n//         <div className=\"table-container\">\n//           <table>\n//             <thead>\n//               <tr>\n//                 <th>Your Income</th>\n//                 <th>{income}</th>\n//                 <th></th>\n//               </tr>\n//               <tr>\n//                 <th>Date</th>\n//                 <th>Time</th>\n//                 <th>Amount</th>\n//                 <th>Mode</th>\n//                 <th>Type</th>\n//                 <th>Action</th>\n//               </tr>\n//             </thead>\n//             <tbody>\n//               {expenses.map((expense, index) => (\n//                 <tr key={index}>\n//                   <td>{expense.date}</td>\n//                   <td>{expense.time}</td>\n//                   <td>{expense.amount}</td>\n//                   <td>{expense.mode}</td>\n//                   <td>{expense.type}</td>\n//                   <td>\n//                     <button className=\"delete-btn\" onClick={() => handleDeleteExpense(index)}>Delete</button>\n//                   </td>\n//                 </tr>\n//               ))}\n//               <tr>\n//                 <td>Total Expenses:</td>\n//                 <td>{totalExpenses}</td>\n//                 <td></td>\n//                 <td></td>\n//                 <td></td>\n//               </tr>\n//               <tr>\n//                 <td>Balance:</td>\n//                 <td>{balance}</td>\n//                 <td></td>\n//                 <td></td>\n//                 <td></td>\n//               </tr>\n//             </tbody>\n//           </table>\n//         </div>\n//         <button onClick={exportPDF} className=\"button\">Export to PDF</button>\n//         <PieChart data={expenses} /> {/* Include the PieChart component */}\n//       </div>\n//       <Footer /> {/* Include the Footer component */}\n//     </div>\n//   );\n// };\n\n// export default Home;\nimport React, { useState, useEffect } from 'react';\nimport jsPDF from 'jspdf';\nimport 'jspdf-autotable';\nimport PieChart from './PieChart';\nimport Footer from './Footer'; // Import the Footer component\nimport apiService from './apiService'; // Import the API service\nimport './Home.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [income, setIncome] = useState('');\n  const [expenses, setExpenses] = useState([]);\n  const [expenseDate, setExpenseDate] = useState('');\n  const [expenseTime, setExpenseTime] = useState('');\n  const [expenseAmount, setExpenseAmount] = useState('');\n  const [expenseMode, setExpenseMode] = useState('');\n  const [expenseType, setExpenseType] = useState('');\n  const [userId, setUserId] = useState(''); // Add userId state\n\n  useEffect(() => {\n    // Fetch expenses when the component mounts\n    if (userId) {\n      apiService.getExpenses(userId).then(response => {\n        setExpenses(response.data);\n      });\n    }\n  }, [userId]);\n  const handleAddIncome = () => {\n    setIncome(parseInt(income) || 0);\n  };\n  const handleAddExpense = () => {\n    if (expenseDate && expenseTime && expenseAmount && expenseMode && expenseType) {\n      const newExpense = {\n        date: expenseDate,\n        time: expenseTime,\n        amount: parseInt(expenseAmount),\n        mode: expenseMode,\n        type: expenseType,\n        userId\n      };\n      apiService.addExpense(newExpense).then(response => {\n        setExpenses([...expenses, response.data]);\n        setExpenseDate('');\n        setExpenseTime('');\n        setExpenseAmount('');\n        setExpenseMode('');\n        setExpenseType('');\n      });\n    }\n  };\n  const handleDeleteExpense = id => {\n    apiService.deleteExpense(id).then(() => {\n      setExpenses(expenses.filter(expense => expense.id !== id));\n    });\n  };\n  const totalExpenses = expenses.reduce((acc, expense) => acc + expense.amount, 0);\n  const balance = income - totalExpenses;\n  const exportPDF = () => {\n    const doc = new jsPDF();\n    doc.setFontSize(12);\n    doc.text('Expense Report', 14, 16);\n    doc.autoTable({\n      startY: 25,\n      head: [['Date', 'Time', 'Amount', 'Mode', 'Type']],\n      body: expenses.map(expense => [expense.date, expense.time, expense.amount, expense.mode, expense.type]),\n      didDrawPage: data => {\n        doc.text(`Total Expenses: ${totalExpenses}`, 14, data.cursor.y + 10);\n        doc.text(`Balance: ${balance}`, 14, data.cursor.y + 20);\n      }\n    });\n    doc.save('expense-report.pdf');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"home-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"income\",\n            children: \"Income:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 478,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            id: \"income\",\n            value: income,\n            onChange: e => setIncome(e.target.value),\n            className: \"input-field\",\n            placeholder: \"Enter Your Income\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 479,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleAddIncome,\n            className: \"button\",\n            children: \"Add Income\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 487,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"expenseDate\",\n            children: \"Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 490,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            id: \"expenseDate\",\n            value: expenseDate,\n            onChange: e => setExpenseDate(e.target.value),\n            className: \"input-field\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 491,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 489,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"expenseTime\",\n            children: \"Time:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 500,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"time\",\n            id: \"expenseTime\",\n            value: expenseTime,\n            onChange: e => setExpenseTime(e.target.value),\n            className: \"input-field\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 501,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 499,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"expenseAmount\",\n            children: \"Amount:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 510,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            id: \"expenseAmount\",\n            value: expenseAmount,\n            onChange: e => setExpenseAmount(e.target.value),\n            className: \"input-field\",\n            placeholder: \"Enter Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 511,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 509,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"expenseMode\",\n            children: \"Payment Method:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 521,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"expenseMode\",\n            value: expenseMode,\n            onChange: e => setExpenseMode(e.target.value),\n            className: \"input-field\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Mode\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 528,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Cash\",\n              children: \"Cash\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 529,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"CreditCard\",\n              children: \"Credit Card\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 530,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"DebitCard\",\n              children: \"Debit Card\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 531,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"BankTransfer\",\n              children: \"Bank Transfer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 532,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"UPI\",\n              children: \"UPI\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 533,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 522,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 520,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"expenseType\",\n            children: \"Type:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 537,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"expenseType\",\n            value: expenseType,\n            onChange: e => setExpenseType(e.target.value),\n            className: \"input-field\",\n            placeholder: \"Enter Type of Expense\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 538,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 536,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddExpense,\n          className: \"button\",\n          children: \"Add Expense\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 547,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 476,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-container\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Your Income\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 554,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: income\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 555,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 556,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 553,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 559,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 560,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Amount\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 561,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Mode\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 562,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 563,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Action\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 564,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 558,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 552,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: [expenses.map(expense => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: expense.date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 570,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: expense.time\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 571,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: expense.amount\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 572,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: expense.mode\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 573,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: expense.type\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 574,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"delete-btn\",\n                  onClick: () => handleDeleteExpense(expense.id),\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 576,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 575,\n                columnNumber: 19\n              }, this)]\n            }, expense.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 569,\n              columnNumber: 17\n            }, this)), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Total Expenses:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 581,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: totalExpenses\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 582,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 583,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 584,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 585,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 580,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Balance:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 588,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: balance\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 589,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 590,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 591,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 592,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 587,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 567,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 551,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 550,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: exportPDF,\n        className: \"button\",\n        children: \"Export to PDF\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 597,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PieChart, {\n        data: expenses\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 598,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 474,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 600,\n      columnNumber: 7\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 473,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"taHi2Ttpkno5VO5RI9RWcjv0XA4=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","jsPDF","PieChart","Footer","apiService","jsxDEV","_jsxDEV","Home","_s","income","setIncome","expenses","setExpenses","expenseDate","setExpenseDate","expenseTime","setExpenseTime","expenseAmount","setExpenseAmount","expenseMode","setExpenseMode","expenseType","setExpenseType","userId","setUserId","getExpenses","then","response","data","handleAddIncome","parseInt","handleAddExpense","newExpense","date","time","amount","mode","type","addExpense","handleDeleteExpense","id","deleteExpense","filter","expense","totalExpenses","reduce","acc","balance","exportPDF","doc","setFontSize","text","autoTable","startY","head","body","map","didDrawPage","cursor","y","save","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["D:/desktop/tracker/my-expense-tracker/src/components/Home.js"],"sourcesContent":["\r\n// import React, { useState, useEffect } from 'react';\r\n// import jsPDF from 'jspdf';\r\n// import 'jspdf-autotable';\r\n// import PieChart from './PieChart';\r\n// import Footer from './Footer'; // Import the Footer component\r\n// import './Home.css';\r\n\r\n// const Home = () => {\r\n//   const [income, setIncome] = useState('');\r\n//   const [expenses, setExpenses] = useState([]);\r\n//   const [expenseDate, setExpenseDate] = useState('');\r\n//   const [expenseTime, setExpenseTime] = useState('');\r\n//   const [expenseAmount, setExpenseAmount] = useState('');\r\n//   const [expenseMode, setExpenseMode] = useState('');\r\n//   const [expenseType, setExpenseType] = useState('');\r\n//   const [currentTime, setCurrentTime] = useState('');\r\n\r\n//   useEffect(() => {\r\n//     const updateCurrentTime = () => {\r\n//       const now = new Date();\r\n//       setCurrentTime(now.toLocaleTimeString());\r\n//     };\r\n\r\n//     const timer = setInterval(updateCurrentTime, 1000);\r\n//     updateCurrentTime();\r\n//     return () => clearInterval(timer);\r\n//   }, []);\r\n\r\n//   const handleAddIncome = () => {\r\n//     setIncome(parseInt(income) || 0);\r\n//   };\r\n\r\n//   const handleAddExpense = () => {\r\n//     if (expenseDate && expenseTime && expenseAmount && expenseMode && expenseType) {\r\n//       setExpenses([...expenses, { date: expenseDate, time: expenseTime, amount: parseInt(expenseAmount), mode: expenseMode, type: expenseType }]);\r\n//       setExpenseDate('');\r\n//       setExpenseTime('');\r\n//       setExpenseAmount('');\r\n//       setExpenseMode('');\r\n//       setExpenseType('');\r\n//     }\r\n//   };\r\n\r\n//   const handleDeleteExpense = (index) => {\r\n//     const newExpenses = expenses.filter((_, i) => i !== index);\r\n//     setExpenses(newExpenses);\r\n//   };\r\n\r\n//   const totalExpenses = expenses.reduce((acc, expense) => acc + expense.amount, 0);\r\n//   const balance = income - totalExpenses;\r\n\r\n//   const exportPDF = () => {\r\n//     const doc = new jsPDF();\r\n//     doc.setFontSize(12);\r\n//     doc.text('Expense Report', 14, 16);\r\n\r\n//     doc.autoTable({\r\n//       startY: 25,\r\n//       head: [['Date', 'Time', 'Amount', 'Mode', 'Type']],\r\n//       body: expenses.map(expense => [expense.date, expense.time, expense.amount, expense.mode, expense.type]),\r\n//       didDrawPage: (data) => {\r\n//         doc.text(`Total Expenses: ${totalExpenses}`, 14, data.cursor.y + 10);\r\n//         doc.text(`Balance: ${balance}`, 14, data.cursor.y + 20);\r\n//       }\r\n//     });\r\n\r\n//     doc.save('expense-report.pdf');\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"home-container\">\r\n//       <div className=\"home-content\">\r\n//         {/* Input forms and buttons */}\r\n//         <div className=\"input-box\">\r\n//           <div className=\"form-group\">\r\n//             <label htmlFor=\"income\">Income:</label>\r\n//             <input\r\n//               type=\"number\"\r\n//               id=\"income\"\r\n//               value={income}\r\n//               onChange={(e) => setIncome(e.target.value)}\r\n//               className=\"input-field\"\r\n//               placeholder=\"Enter Your Income\"\r\n//             />\r\n//             <button onClick={handleAddIncome} className=\"button\">Add Income</button>\r\n//           </div>\r\n//           <div className=\"form-group\">\r\n//             <label htmlFor=\"expenseDate\">Date:</label>\r\n//             <input\r\n//               type=\"date\"\r\n//               id=\"expenseDate\"\r\n//               value={expenseDate}\r\n//               onChange={(e) => setExpenseDate(e.target.value)}\r\n//               className=\"input-field\"\r\n//             />\r\n//           </div>\r\n//           <div className=\"form-group\">\r\n//             <label htmlFor=\"expenseTime\">Time:</label>\r\n//             <input\r\n//               type=\"time\"\r\n//               id=\"expenseTime\"\r\n//               value={expenseTime}\r\n//               onChange={(e) => setExpenseTime(e.target.value)}\r\n//               className=\"input-field\"\r\n//             />\r\n//             <div id=\"currentTime\" className=\"time-container\">\r\n//               Current Time: {currentTime}\r\n//             </div>\r\n//           </div>\r\n//           <div className=\"form-group\">\r\n//             <label htmlFor=\"expenseAmount\">Amount:</label>\r\n//             <input\r\n//               type=\"number\"\r\n//               id=\"expenseAmount\"\r\n//               value={expenseAmount}\r\n//               onChange={(e) => setExpenseAmount(e.target.value)}\r\n//               className=\"input-field\"\r\n//               placeholder=\"Enter Amount\"\r\n//             />\r\n//           </div>\r\n//           <div className=\"form-group\">\r\n//             <label htmlFor=\"expenseMode\">Payment Method:</label>\r\n//             <select\r\n//               id=\"expenseMode\"\r\n//               value={expenseMode}\r\n//               onChange={(e) => setExpenseMode(e.target.value)}\r\n//               className=\"input-field\"\r\n//             >\r\n//               <option value=\"\">Select Mode</option>\r\n//               <option value=\"Cash\">Cash</option>\r\n//               <option value=\"CreditCard\">Credit Card</option>\r\n//               <option value=\"DebitCard\">Debit Card</option>\r\n//               <option value=\"BankTransfer\">Bank Transfer</option>\r\n//               <option value=\"UPI\">UPI</option>\r\n//             </select>\r\n//           </div>\r\n//           <div className=\"form-group\">\r\n//             <label htmlFor=\"expenseType\">Type:</label>\r\n//             <input\r\n//               type=\"text\"\r\n//               id=\"expenseType\"\r\n//               value={expenseType}\r\n//               onChange={(e) => setExpenseType(e.target.value)}\r\n//               className=\"input-field\"\r\n//               placeholder=\"Enter Type of Expense\"\r\n//             />\r\n//           </div>\r\n//           <button onClick={handleAddExpense} className=\"button\">Add Expense</button>\r\n//         </div>\r\n\r\n//         <div className=\"table-container\">\r\n//           <table>\r\n//             <thead>\r\n//               <tr>\r\n//                 <th>Your Income</th>\r\n//                 <th>{income}</th>\r\n//                 <th></th>\r\n//               </tr>\r\n//               <tr>\r\n//                 <th>Date</th>\r\n//                 <th>Time</th>\r\n//                 <th>Amount</th>\r\n//                 <th>Mode</th>\r\n//                 <th>Type</th>\r\n//                 <th>Action</th>\r\n//               </tr>\r\n//             </thead>\r\n//             <tbody>\r\n//               {expenses.map((expense, index) => (\r\n//                 <tr key={index}>\r\n//                   <td>{expense.date}</td>\r\n//                   <td>{expense.time}</td>\r\n//                   <td>{expense.amount}</td>\r\n//                   <td>{expense.mode}</td>\r\n//                   <td>{expense.type}</td>\r\n//                   <td>\r\n//                     <button className=\"delete-btn\" onClick={() => handleDeleteExpense(index)}>Delete</button>\r\n//                   </td>\r\n//                 </tr>\r\n//               ))}\r\n//               <tr>\r\n//                 <td>Total Expenses:</td>\r\n//                 <td>{totalExpenses}</td>\r\n//                 <td></td>\r\n//                 <td></td>\r\n//                 <td></td>\r\n//               </tr>\r\n//               <tr>\r\n//                 <td>Balance:</td>\r\n//                 <td>{balance}</td>\r\n//                 <td></td>\r\n//                 <td></td>\r\n//                 <td></td>\r\n//               </tr>\r\n//             </tbody>\r\n//           </table>\r\n//         </div>\r\n//         <button onClick={exportPDF} className=\"button\">Export to PDF</button>\r\n//         <PieChart data={expenses} /> {/* Include the PieChart component */}\r\n//       </div>\r\n//       <br></br>\r\n//       <Footer /> {/* Include the Footer component */}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Home;\r\n// import React, { useState } from 'react';\r\n// import jsPDF from 'jspdf';\r\n// import 'jspdf-autotable';\r\n// import PieChart from './PieChart';\r\n// import Footer from './Footer'; // Import the Footer component\r\n// import './Home.css';\r\n\r\n// const Home = () => {\r\n//   const [income, setIncome] = useState('');\r\n//   const [expenses, setExpenses] = useState([]);\r\n//   const [expenseDate, setExpenseDate] = useState('');\r\n//   const [expenseTime, setExpenseTime] = useState('');\r\n//   const [expenseAmount, setExpenseAmount] = useState('');\r\n//   const [expenseMode, setExpenseMode] = useState('');\r\n//   const [expenseType, setExpenseType] = useState('');\r\n\r\n//   const handleAddIncome = () => {\r\n//     setIncome(parseInt(income) || 0);\r\n//   };\r\n\r\n//   const handleAddExpense = () => {\r\n//     if (expenseDate && expenseTime && expenseAmount && expenseMode && expenseType) {\r\n//       setExpenses([...expenses, { date: expenseDate, time: expenseTime, amount: parseInt(expenseAmount), mode: expenseMode, type: expenseType }]);\r\n//       setExpenseDate('');\r\n//       setExpenseTime('');\r\n//       setExpenseAmount('');\r\n//       setExpenseMode('');\r\n//       setExpenseType('');\r\n//     }\r\n//   };\r\n\r\n//   const handleDeleteExpense = (index) => {\r\n//     const newExpenses = expenses.filter((_, i) => i !== index);\r\n//     setExpenses(newExpenses);\r\n//   };\r\n\r\n//   const totalExpenses = expenses.reduce((acc, expense) => acc + expense.amount, 0);\r\n//   const balance = income - totalExpenses;\r\n\r\n//   const exportPDF = () => {\r\n//     const doc = new jsPDF();\r\n//     doc.setFontSize(12);\r\n//     doc.text('Expense Report', 14, 16);\r\n\r\n//     doc.autoTable({\r\n//       startY: 25,\r\n//       head: [['Date', 'Time', 'Amount', 'Mode', 'Type']],\r\n//       body: expenses.map(expense => [expense.date, expense.time, expense.amount, expense.mode, expense.type]),\r\n//       didDrawPage: (data) => {\r\n//         doc.text(`Total Expenses: ${totalExpenses}`, 14, data.cursor.y + 10);\r\n//         doc.text(`Balance: ${balance}`, 14, data.cursor.y + 20);\r\n//       }\r\n//     });\r\n\r\n//     doc.save('expense-report.pdf');\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"home-container\">\r\n//       <div className=\"home-content\">\r\n//         {/* Input forms and buttons */}\r\n//         <div className=\"input-box\">\r\n//           <div className=\"form-group\">\r\n//             <label htmlFor=\"income\">Income:</label>\r\n//             <input\r\n//               type=\"number\"\r\n//               id=\"income\"\r\n//               value={income}\r\n//               onChange={(e) => setIncome(e.target.value)}\r\n//               className=\"input-field\"\r\n//               placeholder=\"Enter Your Income\"\r\n//             />\r\n//             <button onClick={handleAddIncome} className=\"button\">Add Income</button>\r\n//           </div>\r\n//           <div className=\"form-group\">\r\n//             <label htmlFor=\"expenseDate\">Date:</label>\r\n//             <input\r\n//               type=\"date\"\r\n//               id=\"expenseDate\"\r\n//               value={expenseDate}\r\n//               onChange={(e) => setExpenseDate(e.target.value)}\r\n//               className=\"input-field\"\r\n//             />\r\n//           </div>\r\n//           <div className=\"form-group\">\r\n//             <label htmlFor=\"expenseTime\">Time:</label>\r\n//             <input\r\n//               type=\"time\"\r\n//               id=\"expenseTime\"\r\n//               value={expenseTime}\r\n//               onChange={(e) => setExpenseTime(e.target.value)}\r\n//               className=\"input-field\"\r\n//             />\r\n//           </div>\r\n//           <div className=\"form-group\">\r\n//             <label htmlFor=\"expenseAmount\">Amount:</label>\r\n//             <input\r\n//               type=\"number\"\r\n//               id=\"expenseAmount\"\r\n//               value={expenseAmount}\r\n//               onChange={(e) => setExpenseAmount(e.target.value)}\r\n//               className=\"input-field\"\r\n//               placeholder=\"Enter Amount\"\r\n//             />\r\n//           </div>\r\n//           <div className=\"form-group\">\r\n//             <label htmlFor=\"expenseMode\">Payment Method:</label>\r\n//             <select\r\n//               id=\"expenseMode\"\r\n//               value={expenseMode}\r\n//               onChange={(e) => setExpenseMode(e.target.value)}\r\n//               className=\"input-field\"\r\n//             >\r\n//               <option value=\"\">Select Mode</option>\r\n//               <option value=\"Cash\">Cash</option>\r\n//               <option value=\"CreditCard\">Credit Card</option>\r\n//               <option value=\"DebitCard\">Debit Card</option>\r\n//               <option value=\"BankTransfer\">Bank Transfer</option>\r\n//               <option value=\"UPI\">UPI</option>\r\n//             </select>\r\n//           </div>\r\n//           <div className=\"form-group\">\r\n//             <label htmlFor=\"expenseType\">Type:</label>\r\n//             <input\r\n//               type=\"text\"\r\n//               id=\"expenseType\"\r\n//               value={expenseType}\r\n//               onChange={(e) => setExpenseType(e.target.value)}\r\n//               className=\"input-field\"\r\n//               placeholder=\"Enter Type of Expense\"\r\n//             />\r\n//           </div>\r\n//           <button onClick={handleAddExpense} className=\"button\">Add Expense</button>\r\n//         </div>\r\n\r\n//         <div className=\"table-container\">\r\n//           <table>\r\n//             <thead>\r\n//               <tr>\r\n//                 <th>Your Income</th>\r\n//                 <th>{income}</th>\r\n//                 <th></th>\r\n//               </tr>\r\n//               <tr>\r\n//                 <th>Date</th>\r\n//                 <th>Time</th>\r\n//                 <th>Amount</th>\r\n//                 <th>Mode</th>\r\n//                 <th>Type</th>\r\n//                 <th>Action</th>\r\n//               </tr>\r\n//             </thead>\r\n//             <tbody>\r\n//               {expenses.map((expense, index) => (\r\n//                 <tr key={index}>\r\n//                   <td>{expense.date}</td>\r\n//                   <td>{expense.time}</td>\r\n//                   <td>{expense.amount}</td>\r\n//                   <td>{expense.mode}</td>\r\n//                   <td>{expense.type}</td>\r\n//                   <td>\r\n//                     <button className=\"delete-btn\" onClick={() => handleDeleteExpense(index)}>Delete</button>\r\n//                   </td>\r\n//                 </tr>\r\n//               ))}\r\n//               <tr>\r\n//                 <td>Total Expenses:</td>\r\n//                 <td>{totalExpenses}</td>\r\n//                 <td></td>\r\n//                 <td></td>\r\n//                 <td></td>\r\n//               </tr>\r\n//               <tr>\r\n//                 <td>Balance:</td>\r\n//                 <td>{balance}</td>\r\n//                 <td></td>\r\n//                 <td></td>\r\n//                 <td></td>\r\n//               </tr>\r\n//             </tbody>\r\n//           </table>\r\n//         </div>\r\n//         <button onClick={exportPDF} className=\"button\">Export to PDF</button>\r\n//         <PieChart data={expenses} /> {/* Include the PieChart component */}\r\n//       </div>\r\n//       <Footer /> {/* Include the Footer component */}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Home;\r\nimport React, { useState, useEffect } from 'react';\r\nimport jsPDF from 'jspdf';\r\nimport 'jspdf-autotable';\r\nimport PieChart from './PieChart';\r\nimport Footer from './Footer'; // Import the Footer component\r\nimport apiService from './apiService'; // Import the API service\r\nimport './Home.css';\r\n\r\nconst Home = () => {\r\n  const [income, setIncome] = useState('');\r\n  const [expenses, setExpenses] = useState([]);\r\n  const [expenseDate, setExpenseDate] = useState('');\r\n  const [expenseTime, setExpenseTime] = useState('');\r\n  const [expenseAmount, setExpenseAmount] = useState('');\r\n  const [expenseMode, setExpenseMode] = useState('');\r\n  const [expenseType, setExpenseType] = useState('');\r\n  const [userId, setUserId] = useState(''); // Add userId state\r\n\r\n  useEffect(() => {\r\n    // Fetch expenses when the component mounts\r\n    if (userId) {\r\n      apiService.getExpenses(userId).then(response => {\r\n        setExpenses(response.data);\r\n      });\r\n    }\r\n  }, [userId]);\r\n\r\n  const handleAddIncome = () => {\r\n    setIncome(parseInt(income) || 0);\r\n  };\r\n\r\n  const handleAddExpense = () => {\r\n    if (expenseDate && expenseTime && expenseAmount && expenseMode && expenseType) {\r\n      const newExpense = { date: expenseDate, time: expenseTime, amount: parseInt(expenseAmount), mode: expenseMode, type: expenseType, userId };\r\n      apiService.addExpense(newExpense).then(response => {\r\n        setExpenses([...expenses, response.data]);\r\n        setExpenseDate('');\r\n        setExpenseTime('');\r\n        setExpenseAmount('');\r\n        setExpenseMode('');\r\n        setExpenseType('');\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleDeleteExpense = (id) => {\r\n    apiService.deleteExpense(id).then(() => {\r\n      setExpenses(expenses.filter(expense => expense.id !== id));\r\n    });\r\n  };\r\n\r\n  const totalExpenses = expenses.reduce((acc, expense) => acc + expense.amount, 0);\r\n  const balance = income - totalExpenses;\r\n\r\n  const exportPDF = () => {\r\n    const doc = new jsPDF();\r\n    doc.setFontSize(12);\r\n    doc.text('Expense Report', 14, 16);\r\n\r\n    doc.autoTable({\r\n      startY: 25,\r\n      head: [['Date', 'Time', 'Amount', 'Mode', 'Type']],\r\n      body: expenses.map(expense => [expense.date, expense.time, expense.amount, expense.mode, expense.type]),\r\n      didDrawPage: (data) => {\r\n        doc.text(`Total Expenses: ${totalExpenses}`, 14, data.cursor.y + 10);\r\n        doc.text(`Balance: ${balance}`, 14, data.cursor.y + 20);\r\n      }\r\n    });\r\n\r\n    doc.save('expense-report.pdf');\r\n  };\r\n\r\n  return (\r\n    <div className=\"home-container\">\r\n      <div className=\"home-content\">\r\n        {/* Input forms and buttons */}\r\n        <div className=\"input-box\">\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"income\">Income:</label>\r\n            <input\r\n              type=\"number\"\r\n              id=\"income\"\r\n              value={income}\r\n              onChange={(e) => setIncome(e.target.value)}\r\n              className=\"input-field\"\r\n              placeholder=\"Enter Your Income\"\r\n            />\r\n            <button onClick={handleAddIncome} className=\"button\">Add Income</button>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"expenseDate\">Date:</label>\r\n            <input\r\n              type=\"date\"\r\n              id=\"expenseDate\"\r\n              value={expenseDate}\r\n              onChange={(e) => setExpenseDate(e.target.value)}\r\n              className=\"input-field\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"expenseTime\">Time:</label>\r\n            <input\r\n              type=\"time\"\r\n              id=\"expenseTime\"\r\n              value={expenseTime}\r\n              onChange={(e) => setExpenseTime(e.target.value)}\r\n              className=\"input-field\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"expenseAmount\">Amount:</label>\r\n            <input\r\n              type=\"number\"\r\n              id=\"expenseAmount\"\r\n              value={expenseAmount}\r\n              onChange={(e) => setExpenseAmount(e.target.value)}\r\n              className=\"input-field\"\r\n              placeholder=\"Enter Amount\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"expenseMode\">Payment Method:</label>\r\n            <select\r\n              id=\"expenseMode\"\r\n              value={expenseMode}\r\n              onChange={(e) => setExpenseMode(e.target.value)}\r\n              className=\"input-field\"\r\n            >\r\n              <option value=\"\">Select Mode</option>\r\n              <option value=\"Cash\">Cash</option>\r\n              <option value=\"CreditCard\">Credit Card</option>\r\n              <option value=\"DebitCard\">Debit Card</option>\r\n              <option value=\"BankTransfer\">Bank Transfer</option>\r\n              <option value=\"UPI\">UPI</option>\r\n            </select>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"expenseType\">Type:</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"expenseType\"\r\n              value={expenseType}\r\n              onChange={(e) => setExpenseType(e.target.value)}\r\n              className=\"input-field\"\r\n              placeholder=\"Enter Type of Expense\"\r\n            />\r\n          </div>\r\n          <button onClick={handleAddExpense} className=\"button\">Add Expense</button>\r\n        </div>\r\n\r\n        <div className=\"table-container\">\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>Your Income</th>\r\n                <th>{income}</th>\r\n                <th></th>\r\n              </tr>\r\n              <tr>\r\n                <th>Date</th>\r\n                <th>Time</th>\r\n                <th>Amount</th>\r\n                <th>Mode</th>\r\n                <th>Type</th>\r\n                <th>Action</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {expenses.map((expense) => (\r\n                <tr key={expense.id}>\r\n                  <td>{expense.date}</td>\r\n                  <td>{expense.time}</td>\r\n                  <td>{expense.amount}</td>\r\n                  <td>{expense.mode}</td>\r\n                  <td>{expense.type}</td>\r\n                  <td>\r\n                    <button className=\"delete-btn\" onClick={() => handleDeleteExpense(expense.id)}>Delete</button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n              <tr>\r\n                <td>Total Expenses:</td>\r\n                <td>{totalExpenses}</td>\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n              </tr>\r\n              <tr>\r\n                <td>Balance:</td>\r\n                <td>{balance}</td>\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        <button onClick={exportPDF} className=\"button\">Export to PDF</button>\r\n        <PieChart data={expenses} /> {/* Include the PieChart component */}\r\n      </div>\r\n      <Footer /> {/* Include the Footer component */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}